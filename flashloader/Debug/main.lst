Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED21-Oct-23     19:23:06     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
0447A1                     A   268    _fs:
0447A1                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	#include <stdint.h>
                           A   282    ;    6	#include "agontimer.h"
                           A   283    ;    7	#include "protocol.h"
                           A   284    ;    8	
                           A   285    ;    9	#define PAGESIZE	1024
                           A   286    ;   10	#define FLASHPAGES	128
                           A   287    ;   11	#define FLASHSTART	0x0
                           A   288    ;   12	#define BAUDRATE	500000
                           A   289    ;   13	
                           A   290    ;   14	#define MOSFILENAME	"MOS.bin"
                           A   291    ;   15	#define LOADADDRESS	0x50000
                           A   292    ;   16	
                           A   293    ;   17	extern void init_UART0(void);
                           A   294    ;   18	
                           A   295    ;   19	extern void enableFlashKeyRegister(void
                           A   296    ;   20	extern void lockFlashKeyRegister(void);
                           A   297    ;   21	extern void fastmemcpy(UINT24 destinati
                           A   298    ;   22	extern void reset(void);
                           A   299    ;   23	
                           A   300    ;   24	FATFS 	fs;
                           A   301    	SEGMENT CODE
                           A   302    ;   25	
                           A   303    ;   26	int main(int argc, char * argv[]) {
040145                     A   304    _main:
                           A   305    .DEFINE "_main"
                           A   306    
                           A   307    .VALUE _main
                           A   308    
                           A   309    .CLASS 2
                           A   310    
                           A   311    .TYPE 68
                           A   312    
                           A   313    .ENDEF
                           A   314    
                           A   315    .BEGFUNC "main",26,"_main"
                           A   316    
                           A   317    .LINE 26
                           A   318    
                           A   319    .DEFINE "argc"
                           A   320    
                           A   321    .CLASS 65
                           A   322    
                           A   323    .VALUE 6
                           A   324    
                           A   325    .TYPE 4
                           A   326    
                           A   327    .ENDEF
                           A   328    
                           A   329    .DEFINE "argv"
                           A   330    
                           A   331    .CLASS 65
                           A   332    
                           A   333    .VALUE 9
                           A   334    
                           A   335    .TYPE 290
                           A   336    
                           A   337    .ENDEF
                           A   338    
                           A   339    .DEFINE "counter"
                           A   340    
                           A   341    .CLASS 65
                           A   342    
                           A   343    .VALUE -3
                           A   344    
                           A   345    .TYPE 14
                           A   346    
                           A   347    .ENDEF
                           A   348    
                           A   349    .DEFINE "size"
                           A   350    
                           A   351    .CLASS 65
                           A   352    
                           A   353    .VALUE -6
                           A   354    
                           A   355    .TYPE 14
                           A   356    
                           A   357    .ENDEF
                           A   358    
                           A   359    .DEFINE "pagemax"
                           A   360    
                           A   361    .CLASS 65
                           A   362    
                           A   363    .VALUE -9
                           A   364    
                           A   365    .TYPE 14
                           A   366    
                           A   367    .ENDEF
                           A   368    
                           A   369    .DEFINE "addressto"
                           A   370    
                           A   371    .CLASS 65
                           A   372    
                           A   373    .VALUE -12
                           A   374    
                           A   375    .TYPE 14
                           A   376    
                           A   377    .ENDEF
                           A   378    
                           A   379    .DEFINE "addressfrom"
                           A   380    
                           A   381    .CLASS 65
                           A   382    
                           A   383    .VALUE -15
                           A   384    
                           A   385    .TYPE 14
                           A   386    
                           A   387    .ENDEF
                           A   388    
                           A   389    .DEFINE "value"
                           A   390    
                           A   391    .CLASS 65
                           A   392    
                           A   393    .VALUE -16
                           A   394    
                           A   395    .TYPE 12
                           A   396    
                           A   397    .ENDEF
                           A   398    
                           A   399    .DEFINE "lastpagebytes"
                           A   400    
                           A   401    .CLASS 65
                           A   402    
                           A   403    .VALUE -19
                           A   404    
                           A   405    .TYPE 14
                           A   406    
                           A   407    .ENDEF
                           A   408    
                           A   409    .DEFINE "fr"
                           A   410    
                           A   411    .CLASS 65
                           A   412    
                           A   413    .VALUE -22
                           A   414    
                           A   415    .TYPE 4
                           A   416    
                           A   417    .ENDEF
                           A   418    
                           A   419    .DEFINE "br"
                           A   420    
                           A   421    .CLASS 65
                           A   422    
                           A   423    .VALUE -28
                           A   424    
                           A   425    .TYPE 14
                           A   426    
                           A   427    .ENDEF
                           A   428    
                           A   429    .DEFINE "fil"
                           A   430    
                           A   431    .CLASS 65
                           A   432    
                           A   433    .VALUE -57
                           A   434    
                           A   435    .TAG "NONAME2"
                           A   436    
                           A   437    .TYPE 8
                           A   438    
                           A   439    .ENDEF
                           A   440    
040145 DDE5                A   441    	PUSH	IX
040147 DD210000 00         A   442    	LD	IX,0
04014C DD39                A   443    	ADD	IX,SP
04014E ED22C7              A   444    	LEA	HL,IX+%FFFFFFC7
040151 F9                  A   445    	LD	SP,HL
                           A   446    ;   27		FRESULT	fr;
                           A   447    ;   28		FIL	   	fil;
                           A   448    ;   29		UINT24  br;	
                           A   449    ;   30		void * 	dest;
                           A   450    ;   31		UINT24 size;
                           A   451    ;   32		
                           A   452    ;   33		UINT24	counter,pagemax, lastpageby
                           A   453    ;   34		UINT24 addressto,addressfrom;
                           A   454    ;   35		UINT8	value;
                           A   455    ;   36		UINT24 timer;
                           A   456    ;   37		init_spi();
                           A   457    .LINE 37
                           A   458    
040152 CD D9 3E 04         A   459    	CALL	_init_spi
                           A   460    ;   38		init_UART0();
                           A   461    .LINE 38
                           A   462    
040156 CD 97 40 04         A   463    	CALL	_init_UART0
                           A   464    ;   39	
                           A   465    ;   40		f_mount(&fs, "", 1);
                           A   466    .LINE 40
                           A   467    
04015A 01010000            A   468    	LD	BC,1
04015E C5                  A   469    	PUSH	BC
04015F 01 7F 47 04         A   470    	LD	BC,L__0
040163 C5                  A   471    	PUSH	BC
040164 01 A1 47 04         A   472    	LD	BC,_fs
040168 C5                  A   473    	PUSH	BC
040169 CD 43 32 04         A   474    	CALL	_f_mount
04016D C1                  A   475    	POP	BC
04016E C1                  A   476    	POP	BC
04016F C1                  A   477    	POP	BC
                           A   478    ;   41		sendStatus('S', 1, 0); // startup c
                           A   479    .LINE 41
                           A   480    
040170 01000000            A   481    	LD	BC,0
040174 C5                  A   482    	PUSH	BC
040175 C5                  A   483    	PUSH	BC
040176 01010000            A   484    	LD	BC,1
04017A C5                  A   485    	PUSH	BC
04017B 01530000            A   486    	LD	BC,83
04017F C5                  A   487    	PUSH	BC
040180 CD 81 41 04         A   488    	CALL	_sendStatus
040184 C1                  A   489    	POP	BC
040185 C1                  A   490    	POP	BC
040186 C1                  A   491    	POP	BC
040187 C1                  A   492    	POP	BC
                           A   493    ;   42	
                           A   494    ;   43		addressto = FLASHSTART;
                           A   495    .LINE 43
                           A   496    
040188 01000000            A   497    	LD	BC,0
04018C DD0FF4              A   498    	LD	(IX+%FFFFFFF4),BC
                           A   499    ;   44		addressfrom = LOADADDRESS;
                           A   500    .LINE 44
                           A   501    
04018F 01000005            A   502    	LD	BC,327680
040193 DD0FF1              A   503    	LD	(IX+%FFFFFFF1),BC
                           A   504    ;   45		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   505    .LINE 45
                           A   506    
040196 01010000            A   507    	LD	BC,1
04019A C5                  A   508    	PUSH	BC
04019B 01 80 47 04         A   509    	LD	BC,L__1
04019F C5                  A   510    	PUSH	BC
0401A0 ED65C7              A   511    	PEA	IX+%FFFFFFC7
0401A3 CD CF 32 04         A   512    	CALL	_f_open
0401A7 C1                  A   513    	POP	BC
0401A8 C1                  A   514    	POP	BC
0401A9 C1                  A   515    	POP	BC
0401AA DD2FEA              A   516    	LD	(IX+%FFFFFFEA),HL
                           A   517    ;   46		if(fr == FR_OK) {
                           A   518    .LINE 46
                           A   519    
0401AD CD 31 45 04         A   520    	CALL	__icmpzero
0401B1 C2 33 03 04         A   521    	JR	NZ,L_15
                           A   522    ;   47			size = f_size(&fil);
                           A   523    .LINE 47
                           A   524    
0401B5 DD07D2              A   525    	LD	BC,(IX+%FFFFFFD2)
0401B8 DD0FFA              A   526    	LD	(IX+%FFFFFFFA),BC
                           A   527    ;   48			sendStatus('F', 1, size); // fi
                           A   528    .LINE 48
                           A   529    
0401BB AF                  A   530    	XOR	A,A
0401BC C5D1                A   531    	LD	DE,BC
0401BE 4F                  A   532    	LD	C,A
0401BF 0600                A   533    	LD	B,%0
0401C1 C5                  A   534    	PUSH	BC
0401C2 D5                  A   535    	PUSH	DE
0401C3 01010000            A   536    	LD	BC,1
0401C7 C5                  A   537    	PUSH	BC
0401C8 01460000            A   538    	LD	BC,70
0401CC C5                  A   539    	PUSH	BC
0401CD CD 81 41 04         A   540    	CALL	_sendStatus
0401D1 C1                  A   541    	POP	BC
0401D2 C1                  A   542    	POP	BC
0401D3 C1                  A   543    	POP	BC
0401D4 C1                  A   544    	POP	BC
                           A   545    ;   49	
                           A   546    ;   50			fr = f_read(&fil, (void *)LOADA
                           A   547    .LINE 50
                           A   548    
0401D5 ED65E4              A   549    	PEA	IX+%FFFFFFE4
0401D8 DD07FA              A   550    	LD	BC,(IX+%FFFFFFFA)
0401DB C5                  A   551    	PUSH	BC
0401DC 01000005            A   552    	LD	BC,327680
0401E0 C5                  A   553    	PUSH	BC
0401E1 ED65C7              A   554    	PEA	IX+%FFFFFFC7
0401E4 CD 1F 34 04         A   555    	CALL	_f_read
0401E8 C1                  A   556    	POP	BC
0401E9 C1                  A   557    	POP	BC
0401EA C1                  A   558    	POP	BC
0401EB C1                  A   559    	POP	BC
0401EC DD2FEA              A   560    	LD	(IX+%FFFFFFEA),HL
                           A   561    ;   51			sendStatus('M', 1, br); // file
                           A   562    .LINE 51
                           A   563    
0401EF DD07E4              A   564    	LD	BC,(IX+%FFFFFFE4)
0401F2 AF                  A   565    	XOR	A,A
0401F3 C5D1                A   566    	LD	DE,BC
0401F5 4F                  A   567    	LD	C,A
0401F6 0600                A   568    	LD	B,%0
0401F8 C5                  A   569    	PUSH	BC
0401F9 D5                  A   570    	PUSH	DE
0401FA 01010000            A   571    	LD	BC,1
0401FE C5                  A   572    	PUSH	BC
0401FF 014D0000            A   573    	LD	BC,77
040203 C5                  A   574    	PUSH	BC
040204 CD 81 41 04         A   575    	CALL	_sendStatus
040208 C1                  A   576    	POP	BC
040209 C1                  A   577    	POP	BC
04020A C1                  A   578    	POP	BC
04020B C1                  A   579    	POP	BC
                           A   580    ;   52	
                           A   581    ;   53			f_close(&fil);
                           A   582    .LINE 53
                           A   583    
04020C ED65C7              A   584    	PEA	IX+%FFFFFFC7
04020F CD 5A 37 04         A   585    	CALL	_f_close
040213 C1                  A   586    	POP	BC
                           A   587    ;   54			// Wait for user to acknowledge
                           A   588    ;   55			getch();
                           A   589    .LINE 55
                           A   590    
040214 CD 7C 42 04         A   591    	CALL	_getch
                           A   592    ;   56			
                           A   593    ;   57			// Unprotect and erase flash
                           A   594    ;   58			enableFlashKeyRegister();	// 
                           A   595    .LINE 58
                           A   596    
040218 CD F9 00 04         A   597    	CALL	_enableFlashKeyRegister
                           A   598    ;   59			FLASH_PROT = 0;				// 
                           A   599    .LINE 59
                           A   600    
04021C AF                  A   601    	XOR	A,A
04021D ED39FA              A   602    	OUT0	(250),A
                           A   603    ;   60			enableFlashKeyRegister();	// 
                           A   604    .LINE 60
                           A   605    
040220 CD F9 00 04         A   606    	CALL	_enableFlashKeyRegister
                           A   607    ;   61			FLASH_FDIV = 0x5F;			// 
                           A   608    .LINE 61
                           A   609    
040224 3E5F                A   610    	LD	A,%5F
040226 ED39F9              A   611    	OUT0	(249),A
                           A   612    ;   62	
                           A   613    ;   63			/*
                           A   614    ;   64			// Erase all flash pages
                           A   615    ;   65			for(counter = 0; counter < FLAS
                           A   616    ;   66			{
                           A   617    ;   67				FLASH_PAGE = counter;
                           A   618    ;   68				FLASH_PGCTL = 0x02;			
                           A   619    ;   69	
                           A   620    ;   70				do
                           A   621    ;   71				{
                           A   622    ;   72					value = FLASH_PGCTL;
                           A   623    ;   73				}
                           A   624    ;   74				while(value & 0x02);// wait
                           A   625    ;   75			}
                           A   626    ;   76			sendStatus('E', 1, counter); //
                           A   627    ;   77			*/
                           A   628    ;   78			// Mass erase flash
                           A   629    ;   79			FLASH_PGCTL = 0x01;	// mass era
                           A   630    .LINE 79
                           A   631    
040229 3E01                A   632    	LD	A,%1
04022B ED39FF              A   633    	OUT0	(255),A
                           A   634    ;   80			do {
04022E                     A   635    L_0:
                           A   636    .LINE 80
                           A   637    
                           A   638    ;   81				value = FLASH_PGCTL;
                           A   639    .LINE 81
                           A   640    
04022E ED38FF              A   641    	IN0	A,(255)
040231 DD77F0              A   642    	LD	(IX+%FFFFFFF0),A
                           A   643    ;   82			} while(value & 0x01); // wait 
                           A   644    .LINE 82
                           A   645    
040234 E601                A   646    	AND	A,%1
040236 20 F6               A   647    	JR	NZ,L_0
                           A   648    ;   83			sendStatus('E', 1, 128);
                           A   649    .LINE 83
                           A   650    
040238 01000000            A   651    	LD	BC,0
04023C C5                  A   652    	PUSH	BC
04023D 01800000            A   653    	LD	BC,128
040241 C5                  A   654    	PUSH	BC
040242 01010000            A   655    	LD	BC,1
040246 C5                  A   656    	PUSH	BC
040247 01450000            A   657    	LD	BC,69
04024B C5                  A   658    	PUSH	BC
04024C CD 81 41 04         A   659    	CALL	_sendStatus
040250 C1                  A   660    	POP	BC
040251 C1                  A   661    	POP	BC
040252 C1                  A   662    	POP	BC
040253 C1                  A   663    	POP	BC
                           A   664    ;   84	
                           A   665    ;   85			// determine number of pages to
                           A   666    ;   86			pagemax = size/PAGESIZE;
                           A   667    .LINE 86
                           A   668    
040254 DD27FA              A   669    	LD	HL,(IX+%FFFFFFFA)
040257 3E0A                A   670    	LD	A,%A
040259 CD A8 45 04         A   671    	CALL	__ishru_b
04025D DD2FF7              A   672    	LD	(IX+%FFFFFFF7),HL
                           A   673    ;   87			if(size%PAGESIZE) // last page 
                           A   674    .LINE 87
                           A   675    
040260 01FF0300            A   676    	LD	BC,1023
040264 DD27FA              A   677    	LD	HL,(IX+%FFFFFFFA)
040267 CD 40 46 04         A   678    	CALL	__iand
04026B DD2FE7              A   679    	LD	(IX+%FFFFFFE7),HL
04026E CD 31 45 04         A   680    	CALL	__icmpzero
040272 28 0F               A   681    	JR	Z,L_4
                           A   682    ;   88			{
                           A   683    ;   89				pagemax += 1;
                           A   684    .LINE 89
                           A   685    
040274 DD07F7              A   686    	LD	BC,(IX+%FFFFFFF7)
040277 03                  A   687    	INC	BC
040278 DD0FF7              A   688    	LD	(IX+%FFFFFFF7),BC
                           A   689    ;   90				lastpagebytes = size%PAGESI
                           A   690    .LINE 90
                           A   691    
04027B DD07E7              A   692    	LD	BC,(IX+%FFFFFFE7)
04027E DD0FED              A   693    	LD	(IX+%FFFFFFED),BC
                           A   694    ;   91			}
                           A   695    ;   92			else lastpagebytes = PAGESIZE; 
                           A   696    .LINE 92
                           A   697    
040281 18 07               A   698    	JR	L_12
040283                     A   699    L_4:
040283 01000400            A   700    	LD	BC,1024
040287 DD0FED              A   701    	LD	(IX+%FFFFFFED),BC
04028A                     A   702    L_12:
                           A   703    ;   93	
                           A   704    ;   94			// write out each page to flash
                           A   705    ;   95			for(counter = 0; counter < page
                           A   706    .LINE 95
                           A   707    
04028A 01000000            A   708    	LD	BC,0
04028E DD0FFD              A   709    	LD	(IX+%FFFFFFFD),BC
040291 18 72               A   710    	JR	L_11
040293                     A   711    L_9:
                           A   712    ;   96			{
                           A   713    ;   97				if(counter == (pagemax - 1)
                           A   714    .LINE 97
                           A   715    
040293 DD31F7              A   716    	LD	IY,(IX+%FFFFFFF7)
040296 ED23FF              A   717    	LEA	HL,IY+%FFFFFFFF
040299 DD07FD              A   718    	LD	BC,(IX+%FFFFFFFD)
04029C B7                  A   719    	OR	A,A
04029D ED42                A   720    	SBC	HL,BC
04029F 20 15               A   721    	JR	NZ,L_7
                           A   722    ;   98					fastmemcpy(addressto,ad
                           A   723    .LINE 98
                           A   724    
0402A1 DD07ED              A   725    	LD	BC,(IX+%FFFFFFED)
0402A4 C5                  A   726    	PUSH	BC
0402A5 DD07F1              A   727    	LD	BC,(IX+%FFFFFFF1)
0402A8 C5                  A   728    	PUSH	BC
0402A9 DD07F4              A   729    	LD	BC,(IX+%FFFFFFF4)
0402AC C5                  A   730    	PUSH	BC
0402AD CD 26 01 04         A   731    	CALL	_fastmemcpy
0402B1 C1                  A   732    	POP	BC
0402B2 C1                  A   733    	POP	BC
0402B3 C1                  A   734    	POP	BC
                           A   735    ;   99				else 
                           A   736    .LINE 99
                           A   737    
0402B4 18 14               A   738    	JR	L_8
0402B6                     A   739    L_7:
                           A   740    ;  100					fastmemcpy(addressto,ad
                           A   741    .LINE 100
                           A   742    
0402B6 01000400            A   743    	LD	BC,1024
0402BA C5                  A   744    	PUSH	BC
0402BB DD07F1              A   745    	LD	BC,(IX+%FFFFFFF1)
0402BE C5                  A   746    	PUSH	BC
0402BF DD07F4              A   747    	LD	BC,(IX+%FFFFFFF4)
0402C2 C5                  A   748    	PUSH	BC
0402C3 CD 26 01 04         A   749    	CALL	_fastmemcpy
0402C7 C1                  A   750    	POP	BC
0402C8 C1                  A   751    	POP	BC
0402C9 C1                  A   752    	POP	BC
0402CA                     A   753    L_8:
                           A   754    ;  101			
                           A   755    ;  102				addressto += PAGESIZE;
                           A   756    .LINE 102
                           A   757    
0402CA 01000400            A   758    	LD	BC,1024
0402CE DD27F4              A   759    	LD	HL,(IX+%FFFFFFF4)
0402D1 09                  A   760    	ADD	HL,BC
0402D2 DD2FF4              A   761    	LD	(IX+%FFFFFFF4),HL
                           A   762    ;  103				addressfrom += PAGESIZE;
                           A   763    .LINE 103
                           A   764    
0402D5 DD27F1              A   765    	LD	HL,(IX+%FFFFFFF1)
0402D8 09                  A   766    	ADD	HL,BC
0402D9 DD2FF1              A   767    	LD	(IX+%FFFFFFF1),HL
                           A   768    ;  104				sendStatus('X', 1, counter+
                           A   769    .LINE 104
                           A   770    
0402DC AF                  A   771    	XOR	A,A
0402DD 5F                  A   772    	LD	E,A
0402DE DD27FD              A   773    	LD	HL,(IX+%FFFFFFFD)
0402E1 3E01                A   774    	LD	A,%1
0402E3 CD D3 42 04         A   775    	CALL	__ladd_b
0402E7 4B                  A   776    	LD	C,E
0402E8 0600                A   777    	LD	B,%0
0402EA C5                  A   778    	PUSH	BC
0402EB E5                  A   779    	PUSH	HL
0402EC 01010000            A   780    	LD	BC,1
0402F0 C5                  A   781    	PUSH	BC
0402F1 01580000            A   782    	LD	BC,88
0402F5 C5                  A   783    	PUSH	BC
0402F6 CD 81 41 04         A   784    	CALL	_sendStatus
0402FA C1                  A   785    	POP	BC
0402FB C1                  A   786    	POP	BC
0402FC C1                  A   787    	POP	BC
0402FD C1                  A   788    	POP	BC
0402FE DD07FD              A   789    	LD	BC,(IX+%FFFFFFFD)
040301 03                  A   790    	INC	BC
040302 DD0FFD              A   791    	LD	(IX+%FFFFFFFD),BC
                           A   792    ;  105			}
040305                     A   793    L_11:
                           A   794    .LINE 105
                           A   795    
040305 DD07F7              A   796    	LD	BC,(IX+%FFFFFFF7)
040308 DD27FD              A   797    	LD	HL,(IX+%FFFFFFFD)
04030B B7                  A   798    	OR	A,A
04030C ED42                A   799    	SBC	HL,BC
04030E 38 83               A   800    	JR	C,L_9
                           A   801    ;  106			lockFlashKeyRegister();	// lock
                           A   802    .LINE 106
                           A   803    
040310 CD 11 01 04         A   804    	CALL	_lockFlashKeyRegister
                           A   805    ;  107			sendStatus('P', 1, counter); //
                           A   806    .LINE 107
                           A   807    
040314 DD07FD              A   808    	LD	BC,(IX+%FFFFFFFD)
040317 AF                  A   809    	XOR	A,A
040318 C5D1                A   810    	LD	DE,BC
04031A 4F                  A   811    	LD	C,A
04031B 0600                A   812    	LD	B,%0
04031D C5                  A   813    	PUSH	BC
04031E D5                  A   814    	PUSH	DE
04031F 01010000            A   815    	LD	BC,1
040323 C5                  A   816    	PUSH	BC
040324 01500000            A   817    	LD	BC,80
040328 C5                  A   818    	PUSH	BC
040329 CD 81 41 04         A   819    	CALL	_sendStatus
04032D C1                  A   820    	POP	BC
04032E C1                  A   821    	POP	BC
04032F C1                  A   822    	POP	BC
040330 C1                  A   823    	POP	BC
                           A   824    ;  108		}
                           A   825    ;  109		else sendStatus('F', 0, 0); // file
                           A   826    .LINE 109
                           A   827    
040331 18 14               A   828    	JR	L_17
040333                     A   829    L_15:
040333 01000000            A   830    	LD	BC,0
040337 C5                  A   831    	PUSH	BC
040338 C5                  A   832    	PUSH	BC
040339 C5                  A   833    	PUSH	BC
04033A 01460000            A   834    	LD	BC,70
04033E C5                  A   835    	PUSH	BC
04033F CD 81 41 04         A   836    	CALL	_sendStatus
040343 C1                  A   837    	POP	BC
040344 C1                  A   838    	POP	BC
040345 C1                  A   839    	POP	BC
040346 C1                  A   840    	POP	BC
                           A   841    ;  110		while(1);
040347                     A   842    L_17:
                           A   843    .LINE 110
                           A   844    
040347 18 FE               A   845    	JR	L_17
                           A   846    ;  111		return 0;
                           A   847    ;  112	}
                           A   848    .LINE 112
                           A   849    
040349 DDF9                A   850    	LD	SP,IX
04034B DDE1                A   851    	POP	IX
04034D C9                  A   852    	RET	
                           A   853    
                           A   854    
                           A   855    ;**************************** _main ***********
                           A   856    ;Name                         Addr/Register   S
                           A   857    ;_lockFlashKeyRegister               IMPORT  --
                           A   858    ;_fastmemcpy                         IMPORT  --
                           A   859    ;_enableFlashKeyRegister             IMPORT  --
                           A   860    ;_getch                              IMPORT  --
                           A   861    ;_f_close                            IMPORT  --
                           A   862    ;_f_read                             IMPORT  --
                           A   863    ;_f_open                             IMPORT  --
                           A   864    ;_sendStatus                         IMPORT  --
                           A   865    ;_fs                                 STATIC    
                           A   866    ;_f_mount                            IMPORT  --
                           A   867    ;_init_UART0                         IMPORT  --
                           A   868    ;_init_spi                           IMPORT  --
                           A   869    ;fil                                  IX-57    
                           A   870    ;br                                   IX-28    
                           A   871    ;G_0                                  IX-25    
                           A   872    ;fr                                   IX-22    
                           A   873    ;lastpagebytes                        IX-19    
                           A   874    ;value                                IX-16    
                           A   875    ;addressfrom                          IX-15    
                           A   876    ;addressto                            IX-12    
                           A   877    ;pagemax                               IX-9    
                           A   878    ;size                                  IX-6    
                           A   879    ;counter                               IX-3    
                           A   880    ;argv                                  IX+9    
                           A   881    ;argc                                  IX+6    
                           A   882    
                           A   883    
                           A   884    ; Stack Frame Size: 69 (bytes)
                           A   885    ;       Spill Code: 0 (instruction)
                           A   886    
                           A   887    
                           A   888    .ENDFUNC "main",112,"_main"
                           A   889    	SEGMENT STRSECT
04477F                     A   890    L__0:
04477F 00                  A   891    	DB	0
044780                     A   892    L__1:
044780 4D4F532E 62696E     A   893    	DB	"MOS.bin"
044787 00                  A   894    	DB	0
                           A   895    	XREF _fastmemcpy:ROM
                           A   896    	XREF _lockFlashKeyRegister:ROM
                           A   897    	XREF _enableFlashKeyRegister:ROM
                           A   898    	XREF _init_UART0:ROM
                           A   899    	XREF _getch:ROM
                           A   900    	XREF _sendStatus:ROM
                           A   901    	XREF _init_spi:ROM
                           A   902    	XREF _f_mount:ROM
                           A   903    	XREF _f_read:ROM
                           A   904    	XREF _f_close:ROM
                           A   905    	XREF _f_open:ROM
                           A   906    	XREF __iand:ROM
                           A   907    	XREF __icmpzero:ROM
                           A   908    	XREF __ladd_b:ROM
                           A   909    	XREF __ishru_b:ROM
                           A   910    	XDEF _main
                           A   911    	XDEF _fs
                           A   912    	END


Errors: 0
Warnings: 0
Lines Assembled: 913
