Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED25-Oct-23     16:46:56     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\src_fatfs\diskio.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",541
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .DEFINE "buf"
                           A   167    .VALUE 29
                           A   168    .CLASS 8
                           A   169    .DIM 512
                           A   170    .TYPE 108
                           A   171    .ENDEF
                           A   172    .ENDREC "NONAME2"
                           A   173    .BEGREC "NONAME3",46
                           A   174    .DEFINE "obj"
                           A   175    .VALUE 0
                           A   176    .CLASS 8
                           A   177    .TAG "NONAME1"
                           A   178    .TYPE 8
                           A   179    .ENDEF
                           A   180    .DEFINE "dptr"
                           A   181    .VALUE 15
                           A   182    .CLASS 8
                           A   183    .TYPE 15
                           A   184    .ENDEF
                           A   185    .DEFINE "clust"
                           A   186    .VALUE 19
                           A   187    .CLASS 8
                           A   188    .TYPE 15
                           A   189    .ENDEF
                           A   190    .DEFINE "sect"
                           A   191    .VALUE 23
                           A   192    .CLASS 8
                           A   193    .TYPE 15
                           A   194    .ENDEF
                           A   195    .DEFINE "dir"
                           A   196    .VALUE 27
                           A   197    .CLASS 8
                           A   198    .TYPE 44
                           A   199    .ENDEF
                           A   200    .DEFINE "fn"
                           A   201    .VALUE 30
                           A   202    .CLASS 8
                           A   203    .DIM 12
                           A   204    .TYPE 108
                           A   205    .ENDEF
                           A   206    .DEFINE "blk_ofs"
                           A   207    .VALUE 42
                           A   208    .CLASS 8
                           A   209    .TYPE 15
                           A   210    .ENDEF
                           A   211    .ENDREC "NONAME3"
                           A   212    .BEGREC "NONAME4",278
                           A   213    .DEFINE "fsize"
                           A   214    .VALUE 0
                           A   215    .CLASS 8
                           A   216    .TYPE 15
                           A   217    .ENDEF
                           A   218    .DEFINE "fdate"
                           A   219    .VALUE 4
                           A   220    .CLASS 8
                           A   221    .TYPE 13
                           A   222    .ENDEF
                           A   223    .DEFINE "ftime"
                           A   224    .VALUE 6
                           A   225    .CLASS 8
                           A   226    .TYPE 13
                           A   227    .ENDEF
                           A   228    .DEFINE "fattrib"
                           A   229    .VALUE 8
                           A   230    .CLASS 8
                           A   231    .TYPE 12
                           A   232    .ENDEF
                           A   233    .DEFINE "altname"
                           A   234    .VALUE 9
                           A   235    .CLASS 8
                           A   236    .DIM 13
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .DEFINE "fname"
                           A   240    .VALUE 22
                           A   241    .CLASS 8
                           A   242    .DIM 256
                           A   243    .TYPE 98
                           A   244    .ENDEF
                           A   245    .ENDREC "NONAME4"
                           A   246    .BEGREC "NONAME5",12
                           A   247    .DEFINE "fmt"
                           A   248    .VALUE 0
                           A   249    .CLASS 8
                           A   250    .TYPE 12
                           A   251    .ENDEF
                           A   252    .DEFINE "n_fat"
                           A   253    .VALUE 1
                           A   254    .CLASS 8
                           A   255    .TYPE 12
                           A   256    .ENDEF
                           A   257    .DEFINE "align"
                           A   258    .VALUE 2
                           A   259    .CLASS 8
                           A   260    .TYPE 14
                           A   261    .ENDEF
                           A   262    .DEFINE "n_root"
                           A   263    .VALUE 5
                           A   264    .CLASS 8
                           A   265    .TYPE 14
                           A   266    .ENDEF
                           A   267    .DEFINE "au_size"
                           A   268    .VALUE 8
                           A   269    .CLASS 8
                           A   270    .TYPE 15
                           A   271    .ENDEF
                           A   272    .ENDREC "NONAME5"
                           A   273    	SEGMENT BSS
044FCC                     A   274    _rtc:
044FCC                     A   275    	DS	1
                           A   276    .DEFINE "rtc"
                           A   277    .ALIAS "_rtc"
                           A   278    .CLASS 83
                           A   279    .VALUE _rtc
                           A   280    .TYPE 12
                           A   281    .ENDEF
                           A   282    ;    1	/*
                           A   283    ;    2	 * Title:			AGON Low level disk
                           A   284    ;    3	 * Modified By:		Dean Belfield
                           A   285    ;    4	 * Created:			19/06/2022
                           A   286    ;    5	 * Last Updated:	15/03/2023
                           A   287    ;    6	 *
                           A   288    ;    7	 * Credits:
                           A   289    ;    8	 * Based upon a skeleton framework (C)C
                           A   290    ;    9	 *
                           A   291    ;   10	 * Modinfo:
                           A   292    ;   11	 * 11/07/2023:		Tweaked to compile 
                           A   293    ;   12	 * 15/03/2023:		Added get_fattime
                           A   294    ;   13	 */
                           A   295    ;   14	
                           A   296    ;   15	#include "ff.h"			// Obtains inte
                           A   297    ;   16	#include "diskio.h"		// Declarations
                           A   298    ;   17	
                           A   299    ;   18	#include "sd.h"			// Physical SD 
                           A   300    ;   19	//#include "clock.h"		// Clock fo
                           A   301    ;   20	
                           A   302    ;   21	BYTE rtc;		// will not work here
                           A   303    	SEGMENT CODE
                           A   304    ;   22	
                           A   305    ;   23	// Get Drive Status (Not implemented in
                           A   306    ;   24	// Parameters:
                           A   307    ;   25	// - pdrv: Physical drive number to ide
                           A   308    ;   26	// Returns:
                           A   309    ;   27	// - DSTATUS
                           A   310    ;   28	// 
                           A   311    ;   29	DSTATUS disk_status(BYTE pdrv) {
043ED1                     A   312    _disk_status:
                           A   313    .DEFINE "_disk_status"
                           A   314    
                           A   315    .VALUE _disk_status
                           A   316    
                           A   317    .CLASS 2
                           A   318    
                           A   319    .TYPE 76
                           A   320    
                           A   321    .ENDEF
                           A   322    
                           A   323    .BEGFUNC "disk_status",29,"_disk_status"
                           A   324    
                           A   325    .LINE 29
                           A   326    
                           A   327    .DEFINE "pdrv"
                           A   328    
                           A   329    .CLASS 65
                           A   330    
                           A   331    .VALUE 6
                           A   332    
                           A   333    .TYPE 12
                           A   334    
                           A   335    .ENDEF
                           A   336    
043ED1 DDE5                A   337    	PUSH	IX
043ED3 DD210000 00         A   338    	LD	IX,0
043ED8 DD39                A   339    	ADD	IX,SP
                           A   340    ;   30		return 0;
                           A   341    .LINE 30
                           A   342    
043EDA AF                  A   343    	XOR	A,A
                           A   344    ;   31	}
                           A   345    .LINE 31
                           A   346    
043EDB DDF9                A   347    	LD	SP,IX
043EDD DDE1                A   348    	POP	IX
043EDF C9                  A   349    	RET	
                           A   350    
                           A   351    
                           A   352    ;**************************** _disk_status ****
                           A   353    ;Name                         Addr/Register   S
                           A   354    ;pdrv                                  IX+6    
                           A   355    
                           A   356    
                           A   357    ; Stack Frame Size: 9 (bytes)
                           A   358    ;       Spill Code: 0 (instruction)
                           A   359    
                           A   360    
                           A   361    .ENDFUNC "disk_status",31,"_disk_status"
                           A   362    ;   32	
                           A   363    ;   33	// Initialise a drive
                           A   364    ;   34	// Parameters:
                           A   365    ;   35	// - pdrv: Physical drive number to ide
                           A   366    ;   36	// Returns:
                           A   367    ;   37	// - DSTATUS
                           A   368    ;   38	//
                           A   369    ;   39	DSTATUS disk_initialize(BYTE pdrv) {
043EE0                     A   370    _disk_initialize:
                           A   371    .DEFINE "_disk_initialize"
                           A   372    
                           A   373    .VALUE _disk_initialize
                           A   374    
                           A   375    .CLASS 2
                           A   376    
                           A   377    .TYPE 76
                           A   378    
                           A   379    .ENDEF
                           A   380    
                           A   381    .BEGFUNC "disk_initialize",39,"_disk_initialize
                           A   382    
                           A   383    .LINE 39
                           A   384    
                           A   385    .DEFINE "pdrv"
                           A   386    
                           A   387    .CLASS 65
                           A   388    
                           A   389    .VALUE 6
                           A   390    
                           A   391    .TYPE 12
                           A   392    
                           A   393    .ENDEF
                           A   394    
                           A   395    .DEFINE "err"
                           A   396    
                           A   397    .CLASS 65
                           A   398    
                           A   399    .VALUE -1
                           A   400    
                           A   401    .TYPE 12
                           A   402    
                           A   403    .ENDEF
                           A   404    
043EE0 DDE5                A   405    	PUSH	IX
043EE2 DD210000 00         A   406    	LD	IX,0
043EE7 DD39                A   407    	ADD	IX,SP
043EE9 3B                  A   408    	DEC	SP
                           A   409    ;   40		BYTE err = SD_init();
                           A   410    .LINE 40
                           A   411    
043EEA CD 47 0B 04         A   412    	CALL	_SD_init
043EEE DD77FF              A   413    	LD	(IX+%FFFFFFFF),A
                           A   414    ;   41		if(err == SD_SUCCESS) {
                           A   415    .LINE 41
                           A   416    
043EF1 B7                  A   417    	OR	A,A
043EF2 20 03               A   418    	JR	NZ,L_2
                           A   419    ;   42			return RES_OK;
                           A   420    .LINE 42
                           A   421    
043EF4 AF                  A   422    	XOR	A,A
043EF5 18 02               A   423    	JR	L_3
                           A   424    ;   43		}
043EF7                     A   425    L_2:
                           A   426    .LINE 43
                           A   427    
                           A   428    ;   44		return RES_ERROR;
                           A   429    .LINE 44
                           A   430    
043EF7 3E01                A   431    	LD	A,%1
                           A   432    ;   45	}
043EF9                     A   433    L_3:
                           A   434    .LINE 45
                           A   435    
043EF9 DDF9                A   436    	LD	SP,IX
043EFB DDE1                A   437    	POP	IX
043EFD C9                  A   438    	RET	
                           A   439    
                           A   440    
                           A   441    ;**************************** _disk_initialize 
                           A   442    ;Name                         Addr/Register   S
                           A   443    ;_SD_init                            IMPORT  --
                           A   444    ;err                                   IX-1    
                           A   445    ;pdrv                                  IX+6    
                           A   446    
                           A   447    
                           A   448    ; Stack Frame Size: 10 (bytes)
                           A   449    ;       Spill Code: 0 (instruction)
                           A   450    
                           A   451    
                           A   452    .ENDFUNC "disk_initialize",45,"_disk_initialize
                           A   453    ;   46	
                           A   454    ;   47	// Read Sector(s)
                           A   455    ;   48	// Parameters:
                           A   456    ;   49	// - pdrv: Physical drive nmuber to ide
                           A   457    ;   50	// - buff: Data buffer to store read da
                           A   458    ;   51	// - sector: Start sector in LBA
                           A   459    ;   52	// - count: Number of sectors to read
                           A   460    ;   53	// Returns:
                           A   461    ;   54	// - DSTATUS
                           A   462    ;   55	//
                           A   463    ;   56	DRESULT disk_read(BYTE pdrv, BYTE *buff
043EFE                     A   464    _disk_read:
                           A   465    .DEFINE "_disk_read"
                           A   466    
                           A   467    .VALUE _disk_read
                           A   468    
                           A   469    .CLASS 2
                           A   470    
                           A   471    .TYPE 68
                           A   472    
                           A   473    .ENDEF
                           A   474    
                           A   475    .BEGFUNC "disk_read",56,"_disk_read"
                           A   476    
                           A   477    .LINE 56
                           A   478    
                           A   479    .DEFINE "pdrv"
                           A   480    
                           A   481    .CLASS 65
                           A   482    
                           A   483    .VALUE 6
                           A   484    
                           A   485    .TYPE 12
                           A   486    
                           A   487    .ENDEF
                           A   488    
                           A   489    .DEFINE "buff"
                           A   490    
                           A   491    .CLASS 65
                           A   492    
                           A   493    .VALUE 9
                           A   494    
                           A   495    .TYPE 44
                           A   496    
                           A   497    .ENDEF
                           A   498    
                           A   499    .DEFINE "sector"
                           A   500    
                           A   501    .CLASS 65
                           A   502    
                           A   503    .VALUE 12
                           A   504    
                           A   505    .TYPE 15
                           A   506    
                           A   507    .ENDEF
                           A   508    
                           A   509    .DEFINE "count"
                           A   510    
                           A   511    .CLASS 65
                           A   512    
                           A   513    .VALUE 18
                           A   514    
                           A   515    .TYPE 14
                           A   516    
                           A   517    .ENDEF
                           A   518    
                           A   519    .DEFINE "err"
                           A   520    
                           A   521    .CLASS 65
                           A   522    
                           A   523    .VALUE -1
                           A   524    
                           A   525    .TYPE 12
                           A   526    
                           A   527    .ENDEF
                           A   528    
043EFE DDE5                A   529    	PUSH	IX
043F00 DD210000 00         A   530    	LD	IX,0
043F05 DD39                A   531    	ADD	IX,SP
043F07 3B                  A   532    	DEC	SP
                           A   533    ;   57		BYTE err = SD_readBlocks(sector, bu
                           A   534    .LINE 57
                           A   535    
043F08 DD0712              A   536    	LD	BC,(IX+%12)
043F0B C5                  A   537    	PUSH	BC
043F0C DD0709              A   538    	LD	BC,(IX+%9)
043F0F C5                  A   539    	PUSH	BC
043F10 DD4E0F              A   540    	LD	C,(IX+%F)
043F13 0600                A   541    	LD	B,%0
043F15 C5                  A   542    	PUSH	BC
043F16 DD070C              A   543    	LD	BC,(IX+%C)
043F19 C5                  A   544    	PUSH	BC
043F1A CD 09 08 04         A   545    	CALL	_SD_readBlocks
043F1E C1                  A   546    	POP	BC
043F1F C1                  A   547    	POP	BC
043F20 C1                  A   548    	POP	BC
043F21 C1                  A   549    	POP	BC
043F22 DD77FF              A   550    	LD	(IX+%FFFFFFFF),A
                           A   551    ;   58		if(err == SD_SUCCESS) {
                           A   552    .LINE 58
                           A   553    
043F25 B7                  A   554    	OR	A,A
043F26 20 05               A   555    	JR	NZ,L_5
                           A   556    ;   59			return RES_OK;
                           A   557    .LINE 59
                           A   558    
043F28 B7                  A   559    	OR	A,A
043F29 ED62                A   560    	SBC	HL,HL
043F2B 18 04               A   561    	JR	L_6
                           A   562    ;   60		}
043F2D                     A   563    L_5:
                           A   564    .LINE 60
                           A   565    
                           A   566    ;   61		return RES_ERROR;
                           A   567    .LINE 61
                           A   568    
043F2D 21010000            A   569    	LD	HL,1
                           A   570    ;   62	}
043F31                     A   571    L_6:
                           A   572    .LINE 62
                           A   573    
043F31 DDF9                A   574    	LD	SP,IX
043F33 DDE1                A   575    	POP	IX
043F35 C9                  A   576    	RET	
                           A   577    
                           A   578    
                           A   579    ;**************************** _disk_read ******
                           A   580    ;Name                         Addr/Register   S
                           A   581    ;_SD_readBlocks                      IMPORT  --
                           A   582    ;err                                   IX-1    
                           A   583    ;count                                IX+18    
                           A   584    ;sector                               IX+12    
                           A   585    ;buff                                  IX+9    
                           A   586    ;pdrv                                  IX+6    
                           A   587    
                           A   588    
                           A   589    ; Stack Frame Size: 22 (bytes)
                           A   590    ;       Spill Code: 0 (instruction)
                           A   591    
                           A   592    
                           A   593    .ENDFUNC "disk_read",62,"_disk_read"
                           A   594    ;   63	
                           A   595    ;   64	#if FF_FS_READONLY == 0
                           A   596    ;   65	
                           A   597    ;   66	// Write Sector(s)
                           A   598    ;   67	// Parameters:
                           A   599    ;   68	// - pdrv: Physical drive nmuber to ide
                           A   600    ;   69	// - buff: Data to be written
                           A   601    ;   70	// - sector: Start sector in LBA
                           A   602    ;   71	// - count: Number of sectors to write
                           A   603    ;   72	// Returns:
                           A   604    ;   73	// - DSTATUS
                           A   605    ;   74	//
                           A   606    ;   75	DRESULT disk_write(BYTE pdrv, const BYT
                           A   607    ;   76		BYTE err = SD_writeBlocks(sector, b
                           A   608    ;   77		if(err == SD_SUCCESS) {
                           A   609    ;   78			return RES_OK;
                           A   610    ;   79		}
                           A   611    ;   80		
                           A   612    ;   81		return RES_ERROR;
                           A   613    ;   82	}
                           A   614    ;   83	
                           A   615    ;   84	#endif
                           A   616    ;   85	
                           A   617    ;   86	// Disk I/O Control (Not implemented in
                           A   618    ;   87	// Parameters:
                           A   619    ;   88	// - pdrv: Physical drive nmuber (0..)
                           A   620    ;   89	// - cmd: Control code
                           A   621    ;   90	// - buff: Buffer to send/receive contr
                           A   622    ;   91	// Returns:
                           A   623    ;   92	// - DSTATUS
                           A   624    ;   93	//
                           A   625    ;   94	DRESULT disk_ioctl(BYTE pdrv, BYTE cmd,
043F36                     A   626    _disk_ioctl:
                           A   627    .DEFINE "_disk_ioctl"
                           A   628    
                           A   629    .VALUE _disk_ioctl
                           A   630    
                           A   631    .CLASS 2
                           A   632    
                           A   633    .TYPE 68
                           A   634    
                           A   635    .ENDEF
                           A   636    
                           A   637    .BEGFUNC "disk_ioctl",94,"_disk_ioctl"
                           A   638    
                           A   639    .LINE 94
                           A   640    
                           A   641    .DEFINE "pdrv"
                           A   642    
                           A   643    .CLASS 65
                           A   644    
                           A   645    .VALUE 6
                           A   646    
                           A   647    .TYPE 12
                           A   648    
                           A   649    .ENDEF
                           A   650    
                           A   651    .DEFINE "cmd"
                           A   652    
                           A   653    .CLASS 65
                           A   654    
                           A   655    .VALUE 9
                           A   656    
                           A   657    .TYPE 12
                           A   658    
                           A   659    .ENDEF
                           A   660    
                           A   661    .DEFINE "buff"
                           A   662    
                           A   663    .CLASS 65
                           A   664    
                           A   665    .VALUE 12
                           A   666    
                           A   667    .TYPE 33
                           A   668    
                           A   669    .ENDEF
                           A   670    
043F36 DDE5                A   671    	PUSH	IX
043F38 DD210000 00         A   672    	LD	IX,0
043F3D DD39                A   673    	ADD	IX,SP
                           A   674    ;   95		return RES_OK;
                           A   675    .LINE 95
                           A   676    
043F3F B7                  A   677    	OR	A,A
043F40 ED62                A   678    	SBC	HL,HL
                           A   679    ;   96	}
                           A   680    .LINE 96
                           A   681    
043F42 DDF9                A   682    	LD	SP,IX
043F44 DDE1                A   683    	POP	IX
043F46 C9                  A   684    	RET	
                           A   685    
                           A   686    
                           A   687    ;**************************** _disk_ioctl *****
                           A   688    ;Name                         Addr/Register   S
                           A   689    ;buff                                 IX+12    
                           A   690    ;cmd                                   IX+9    
                           A   691    ;pdrv                                  IX+6    
                           A   692    
                           A   693    
                           A   694    ; Stack Frame Size: 15 (bytes)
                           A   695    ;       Spill Code: 0 (instruction)
                           A   696    
                           A   697    
                           A   698    .ENDFUNC "disk_ioctl",96,"_disk_ioctl"
                           A   699    ;   97	
                           A   700    ;   98	// Get RTC time for filestamps
                           A   701    ;   99	// Returns:
                           A   702    ;  100	// - TIME (bit packed)
                           A   703    ;  101	//
                           A   704    ;  102	//    0 to  4: Seconds/2 (0 to 29)
                           A   705    ;  103	//    5 to 10: Minutes (0 to 59)
                           A   706    ;  104	//   11 to 15: Hours (0 to 23)
                           A   707    ;  105	//   16 to 20: Day of Month (1 to 31)
                           A   708    ;  106	//   21 to 24: Month (1 to 12)
                           A   709    ;  107	//   25 to 31: Year-1980 (0 to 127)
                           A   710    ;  108	//
                           A   711    ;  109	DWORD get_fattime(void) {
043F47                     A   712    _get_fattime:
                           A   713    .DEFINE "_get_fattime"
                           A   714    
                           A   715    .VALUE _get_fattime
                           A   716    
                           A   717    .CLASS 2
                           A   718    
                           A   719    .TYPE 79
                           A   720    
                           A   721    .ENDEF
                           A   722    
                           A   723    .BEGFUNC "get_fattime",109,"_get_fattime"
                           A   724    
                           A   725    .LINE 109
                           A   726    
                           A   727    .DEFINE "yr"
                           A   728    
                           A   729    .CLASS 65
                           A   730    
                           A   731    .VALUE -4
                           A   732    
                           A   733    .TYPE 15
                           A   734    
                           A   735    .ENDEF
                           A   736    
                           A   737    .DEFINE "mo"
                           A   738    
                           A   739    .CLASS 65
                           A   740    
                           A   741    .VALUE -8
                           A   742    
                           A   743    .TYPE 15
                           A   744    
                           A   745    .ENDEF
                           A   746    
                           A   747    .DEFINE "da"
                           A   748    
                           A   749    .CLASS 65
                           A   750    
                           A   751    .VALUE -12
                           A   752    
                           A   753    .TYPE 15
                           A   754    
                           A   755    .ENDEF
                           A   756    
                           A   757    .DEFINE "hr"
                           A   758    
                           A   759    .CLASS 65
                           A   760    
                           A   761    .VALUE -16
                           A   762    
                           A   763    .TYPE 15
                           A   764    
                           A   765    .ENDEF
                           A   766    
                           A   767    .DEFINE "mi"
                           A   768    
                           A   769    .CLASS 65
                           A   770    
                           A   771    .VALUE -20
                           A   772    
                           A   773    .TYPE 15
                           A   774    
                           A   775    .ENDEF
                           A   776    
                           A   777    .DEFINE "se"
                           A   778    
                           A   779    .CLASS 65
                           A   780    
                           A   781    .VALUE -24
                           A   782    
                           A   783    .TYPE 15
                           A   784    
                           A   785    .ENDEF
                           A   786    
043F47 DDE5                A   787    	PUSH	IX
043F49 DD210000 00         A   788    	LD	IX,0
043F4E DD39                A   789    	ADD	IX,SP
043F50 ED22E8              A   790    	LEA	HL,IX+%FFFFFFE8
043F53 F9                  A   791    	LD	SP,HL
                           A   792    ;  110		DWORD	yr, mo, da, hr, mi, se;
                           A   793    ;  111		BYTE *	p = &rtc;
                           A   794    ;  112	
                           A   795    ;  113		//rtc_update();
                           A   796    ;  114	
                           A   797    ;  115		yr =  *(p+0)    << 25;
                           A   798    .LINE 115
                           A   799    
043F54 B7ED62              A   800    	UEXT	HL
043F57 3A CC 4F 04         A   801    	LD	A,(_rtc)
043F5B 6F                  A   802    	LD	L,A
043F5C 7C                  A   803    	LD	A,H
043F5D E5C1                A   804    	LD	BC,HL
043F5F 2E19                A   805    	LD	L,%19
043F61 CD E5 47 04         A   806    	CALL	__lshl
043F65 DD0FFC              A   807    	LD	(IX+%FFFFFFFC),BC
043F68 DD77FF              A   808    	LD	(IX+%FFFFFFFF),A
                           A   809    ;  116		mo = (*(p+1)+1) << 21;
                           A   810    .LINE 116
                           A   811    
043F6B FD21 CC 4F 04       A   812    	LD	IY,_rtc
043F70 B7ED62              A   813    	UEXT	HL
043F73 FD6E01              A   814    	LD	L,(IY+%1)
043F76 5C                  A   815    	LD	E,H
043F77 3E01                A   816    	LD	A,%1
043F79 CD 96 44 04         A   817    	CALL	__ladd_b
043F7D 7B                  A   818    	LD	A,E
043F7E E5C1                A   819    	LD	BC,HL
043F80 2E15                A   820    	LD	L,%15
043F82 CD E5 47 04         A   821    	CALL	__lshl
043F86 DD0FF8              A   822    	LD	(IX+%FFFFFFF8),BC
043F89 DD77FB              A   823    	LD	(IX+%FFFFFFFB),A
                           A   824    ;  117		da =  *(p+2)    << 16;
                           A   825    .LINE 117
                           A   826    
043F8C B7ED62              A   827    	UEXT	HL
043F8F FD6E02              A   828    	LD	L,(IY+%2)
043F92 7C                  A   829    	LD	A,H
043F93 E5C1                A   830    	LD	BC,HL
043F95 2E10                A   831    	LD	L,%10
043F97 CD E5 47 04         A   832    	CALL	__lshl
043F9B DD0FF4              A   833    	LD	(IX+%FFFFFFF4),BC
043F9E DD77F7              A   834    	LD	(IX+%FFFFFFF7),A
                           A   835    ;  118		hr =  *(p+5)    << 11;
                           A   836    .LINE 118
                           A   837    
043FA1 B7ED62              A   838    	UEXT	HL
043FA4 FD6E05              A   839    	LD	L,(IY+%5)
043FA7 7C                  A   840    	LD	A,H
043FA8 E5C1                A   841    	LD	BC,HL
043FAA 2E0B                A   842    	LD	L,%B
043FAC CD E5 47 04         A   843    	CALL	__lshl
043FB0 DD0FF0              A   844    	LD	(IX+%FFFFFFF0),BC
043FB3 DD77F3              A   845    	LD	(IX+%FFFFFFF3),A
                           A   846    ;  119		mi =  *(p+6)    <<  5;
                           A   847    .LINE 119
                           A   848    
043FB6 B7ED62              A   849    	UEXT	HL
043FB9 FD6E06              A   850    	LD	L,(IY+%6)
043FBC 7C                  A   851    	LD	A,H
043FBD E5C1                A   852    	LD	BC,HL
043FBF 2E05                A   853    	LD	L,%5
043FC1 CD E5 47 04         A   854    	CALL	__lshl
043FC5 DD0FEC              A   855    	LD	(IX+%FFFFFFEC),BC
043FC8 DD77EF              A   856    	LD	(IX+%FFFFFFEF),A
                           A   857    ;  120		se =  *(p+7)    >>  1;
                           A   858    .LINE 120
                           A   859    
043FCB ED2307              A   860    	LEA	HL,IY+%7
043FCE 7E                  A   861    	LD	A,(HL)
043FCF B7ED62              A   862    	UEXT	HL
043FD2 6F                  A   863    	LD	L,A
043FD3 3E01                A   864    	LD	A,%1
043FD5 CD E3 44 04         A   865    	CALL	__ishrs_b
043FD9 E5C1                A   866    	LD	BC,HL
043FDB CD 81 47 04         A   867    	CALL	__itol
043FDF DD0FE8              A   868    	LD	(IX+%FFFFFFE8),BC
043FE2 DD77EB              A   869    	LD	(IX+%FFFFFFEB),A
                           A   870    ;  121	
                           A   871    ;  122		return se | mi | hr | da | mo | yr;
                           A   872    .LINE 122
                           A   873    
043FE5 DD27EC              A   874    	LD	HL,(IX+%FFFFFFEC)
043FE8 DD5EEF              A   875    	LD	E,(IX+%FFFFFFEF)
043FEB DD7EEB              A   876    	LD	A,(IX+%FFFFFFEB)
043FEE CD D3 46 04         A   877    	CALL	__lor
043FF2 DD07F0              A   878    	LD	BC,(IX+%FFFFFFF0)
043FF5 DD7EF3              A   879    	LD	A,(IX+%FFFFFFF3)
043FF8 CD D3 46 04         A   880    	CALL	__lor
043FFC DD07F4              A   881    	LD	BC,(IX+%FFFFFFF4)
043FFF DD7EF7              A   882    	LD	A,(IX+%FFFFFFF7)
044002 CD D3 46 04         A   883    	CALL	__lor
044006 DD07F8              A   884    	LD	BC,(IX+%FFFFFFF8)
044009 DD7EFB              A   885    	LD	A,(IX+%FFFFFFFB)
04400C CD D3 46 04         A   886    	CALL	__lor
044010 DD07FC              A   887    	LD	BC,(IX+%FFFFFFFC)
044013 DD7EFF              A   888    	LD	A,(IX+%FFFFFFFF)
044016 CD D3 46 04         A   889    	CALL	__lor
                           A   890    ;  123	}
                           A   891    .LINE 123
                           A   892    
04401A DDF9                A   893    	LD	SP,IX
04401C DDE1                A   894    	POP	IX
04401E C9                  A   895    	RET	
                           A   896    
                           A   897    
                           A   898    ;**************************** _get_fattime ****
                           A   899    ;Name                         Addr/Register   S
                           A   900    ;_rtc                                STATIC    
                           A   901    ;se                                   IX-24    
                           A   902    ;mi                                   IX-20    
                           A   903    ;hr                                   IX-16    
                           A   904    ;da                                   IX-12    
                           A   905    ;mo                                    IX-8    
                           A   906    ;yr                                    IX-4    
                           A   907    
                           A   908    
                           A   909    ; Stack Frame Size: 30 (bytes)
                           A   910    ;       Spill Code: 0 (instruction)
                           A   911    
                           A   912    
                           A   913    .ENDFUNC "get_fattime",123,"_get_fattime"
                           A   914    	XREF _SD_init:ROM
                           A   915    	XREF _SD_readBlocks:ROM
                           A   916    	XREF __lor:ROM
                           A   917    	XREF __lshl:ROM
                           A   918    	XREF __itol:ROM
                           A   919    	XREF __ladd_b:ROM
                           A   920    	XREF __ishrs_b:ROM
                           A   921    	XDEF _get_fattime
                           A   922    	XDEF _disk_ioctl
                           A   923    	XDEF _disk_read
                           A   924    	XDEF _disk_initialize
                           A   925    	XDEF _disk_status
                           A   926    	XDEF _rtc
                           A   927    	END


Errors: 0
Warnings: 0
Lines Assembled: 928
