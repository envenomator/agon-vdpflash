Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED21-Oct-23     17:00:55     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
0445C2                     A   268    _fs:
0445C2                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	#include <stdint.h>
                           A   282    ;    6	#include "agontimer.h"
                           A   283    ;    7	#include "protocol.h"
                           A   284    ;    8	
                           A   285    ;    9	#define PAGESIZE	1024
                           A   286    ;   10	#define FLASHPAGES	128
                           A   287    ;   11	#define FLASHSTART	0x0
                           A   288    ;   12	#define BAUDRATE	500000
                           A   289    ;   13	
                           A   290    ;   14	#define MOSFILENAME	"MOS.bin"
                           A   291    ;   15	#define LOADADDRESS	0x50000
                           A   292    ;   16	
                           A   293    ;   17	extern void init_UART0(void);
                           A   294    ;   18	
                           A   295    ;   19	extern void enableFlashKeyRegister(void
                           A   296    ;   20	extern void lockFlashKeyRegister(void);
                           A   297    ;   21	extern void fastmemcpy(UINT24 destinati
                           A   298    ;   22	extern void reset(void);
                           A   299    ;   23	
                           A   300    ;   24	FATFS 	fs;
                           A   301    	SEGMENT CODE
                           A   302    ;   25	
                           A   303    ;   26	int main(int argc, char * argv[]) {
040145                     A   304    _main:
                           A   305    .DEFINE "_main"
                           A   306    
                           A   307    .VALUE _main
                           A   308    
                           A   309    .CLASS 2
                           A   310    
                           A   311    .TYPE 68
                           A   312    
                           A   313    .ENDEF
                           A   314    
                           A   315    .BEGFUNC "main",26,"_main"
                           A   316    
                           A   317    .LINE 26
                           A   318    
                           A   319    .DEFINE "argc"
                           A   320    
                           A   321    .CLASS 65
                           A   322    
                           A   323    .VALUE 6
                           A   324    
                           A   325    .TYPE 4
                           A   326    
                           A   327    .ENDEF
                           A   328    
                           A   329    .DEFINE "argv"
                           A   330    
                           A   331    .CLASS 65
                           A   332    
                           A   333    .VALUE 9
                           A   334    
                           A   335    .TYPE 290
                           A   336    
                           A   337    .ENDEF
                           A   338    
                           A   339    .DEFINE "counter"
                           A   340    
                           A   341    .CLASS 65
                           A   342    
                           A   343    .VALUE -3
                           A   344    
                           A   345    .TYPE 14
                           A   346    
                           A   347    .ENDEF
                           A   348    
                           A   349    .DEFINE "addressto"
                           A   350    
                           A   351    .CLASS 65
                           A   352    
                           A   353    .VALUE -6
                           A   354    
                           A   355    .TYPE 14
                           A   356    
                           A   357    .ENDEF
                           A   358    
                           A   359    .DEFINE "addressfrom"
                           A   360    
                           A   361    .CLASS 65
                           A   362    
                           A   363    .VALUE -9
                           A   364    
                           A   365    .TYPE 14
                           A   366    
                           A   367    .ENDEF
                           A   368    
                           A   369    .DEFINE "value"
                           A   370    
                           A   371    .CLASS 65
                           A   372    
                           A   373    .VALUE -10
                           A   374    
                           A   375    .TYPE 12
                           A   376    
                           A   377    .ENDEF
                           A   378    
                           A   379    .DEFINE "pagemax"
                           A   380    
                           A   381    .CLASS 65
                           A   382    
                           A   383    .VALUE -13
                           A   384    
                           A   385    .TYPE 14
                           A   386    
                           A   387    .ENDEF
                           A   388    
                           A   389    .DEFINE "size"
                           A   390    
                           A   391    .CLASS 65
                           A   392    
                           A   393    .VALUE -19
                           A   394    
                           A   395    .TYPE 14
                           A   396    
                           A   397    .ENDEF
                           A   398    
                           A   399    .DEFINE "lastpagebytes"
                           A   400    
                           A   401    .CLASS 65
                           A   402    
                           A   403    .VALUE -22
                           A   404    
                           A   405    .TYPE 14
                           A   406    
                           A   407    .ENDEF
                           A   408    
040145 DDE5                A   409    	PUSH	IX
040147 DD210000 00         A   410    	LD	IX,0
04014C DD39                A   411    	ADD	IX,SP
04014E ED22EA              A   412    	LEA	HL,IX+%FFFFFFEA
040151 F9                  A   413    	LD	SP,HL
                           A   414    ;   27		FRESULT	fr;
                           A   415    ;   28		FIL	   	fil;
                           A   416    ;   29		UINT24  br;	
                           A   417    ;   30		void * 	dest;
                           A   418    ;   31		UINT24 size;
                           A   419    ;   32		
                           A   420    ;   33		UINT24	counter,pagemax, lastpageby
                           A   421    ;   34		UINT24 addressto,addressfrom;
                           A   422    ;   35		UINT8	value;
                           A   423    ;   36		UINT24 timer;
                           A   424    ;   37		init_spi();
                           A   425    .LINE 37
                           A   426    
040152 CD DD 3D 04         A   427    	CALL	_init_spi
                           A   428    ;   38		init_UART0();
                           A   429    .LINE 38
                           A   430    
040156 CD 9B 3F 04         A   431    	CALL	_init_UART0
                           A   432    ;   39	
                           A   433    ;   40		/*
                           A   434    ;   41		while(1) {
                           A   435    ;   42			putch('A');
                           A   436    ;   43			delayms(500);
                           A   437    ;   44			putch('X');
                           A   438    ;   45			delayms(500);
                           A   439    ;   46		}
                           A   440    ;   47		*/
                           A   441    ;   48		while(1) {
04015A                     A   442    L_1:
                           A   443    .LINE 48
                           A   444    
                           A   445    ;   49			sendStatus('S', 1, 0xAABBCCDD);
                           A   446    .LINE 49
                           A   447    
04015A 01AA0000            A   448    	LD	BC,170
04015E C5                  A   449    	PUSH	BC
04015F 01DDCCBB            A   450    	LD	BC,12307677
040163 C5                  A   451    	PUSH	BC
040164 01010000            A   452    	LD	BC,1
040168 C5                  A   453    	PUSH	BC
040169 01530000            A   454    	LD	BC,83
04016D C5                  A   455    	PUSH	BC
04016E CD 85 40 04         A   456    	CALL	_sendStatus
040172 C1                  A   457    	POP	BC
040173 C1                  A   458    	POP	BC
040174 C1                  A   459    	POP	BC
040175 C1                  A   460    	POP	BC
                           A   461    ;   50			delayms(500);
                           A   462    .LINE 50
                           A   463    
040176 01F40100            A   464    	LD	BC,500
04017A C5                  A   465    	PUSH	BC
04017B CD FD 3F 04         A   466    	CALL	_delayms
04017F C1                  A   467    	POP	BC
                           A   468    ;   51			sendStatus('E', 1, 0);
                           A   469    .LINE 51
                           A   470    
040180 01000000            A   471    	LD	BC,0
040184 C5                  A   472    	PUSH	BC
040185 C5                  A   473    	PUSH	BC
040186 01010000            A   474    	LD	BC,1
04018A C5                  A   475    	PUSH	BC
04018B 01450000            A   476    	LD	BC,69
04018F C5                  A   477    	PUSH	BC
040190 CD 85 40 04         A   478    	CALL	_sendStatus
040194 C1                  A   479    	POP	BC
040195 C1                  A   480    	POP	BC
040196 C1                  A   481    	POP	BC
040197 C1                  A   482    	POP	BC
                           A   483    ;   52			delayms(500);
                           A   484    .LINE 52
                           A   485    
040198 01F40100            A   486    	LD	BC,500
04019C C5                  A   487    	PUSH	BC
04019D CD FD 3F 04         A   488    	CALL	_delayms
0401A1 C1                  A   489    	POP	BC
0401A2 18 B6               A   490    	JR	L_1
                           A   491    ;   53		}
                           A   492    ;   54	
                           A   493    ;   55	
                           A   494    ;   56	
                           A   495    ;   57	
                           A   496    ;   58		f_mount(&fs, "", 1);
                           A   497    ;   59	
                           A   498    ;   60		addressto = FLASHSTART;
                           A   499    ;   61		addressfrom = LOADADDRESS;
                           A   500    ;   62	
                           A   501    ;   63		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   502    ;   64		if(fr == FR_OK) {
                           A   503    ;   65	
                           A   504    ;   66			di();
                           A   505    ;   67			size = f_size(&fil);
                           A   506    ;   68			//waitZDI(FEEDBACK_OPEN, size);
                           A   507    ;   69	
                           A   508    ;   70			fr = f_read(&fil, (void *)LOADA
                           A   509    ;   71	
                           A   510    ;   72			f_close(&fil);
                           A   511    ;   73			//waitZDI(FEEDBACK_FILEDONE, br
                           A   512    ;   74			
                           A   513    ;   75			// Wait for user to acknowledge
                           A   514    ;   76			//waitZDI(FEEDBACK_PROCEED, 0);
                           A   515    ;   77			
                           A   516    ;   78			// Unprotect and erase flash
                           A   517    ;   79			enableFlashKeyRegister();	// 
                           A   518    ;   80			FLASH_PROT = 0;				// 
                           A   519    ;   81			enableFlashKeyRegister();	// 
                           A   520    ;   82			FLASH_FDIV = 0x5F;			// 
                           A   521    ;   83	
                           A   522    ;   84			// Erase all flash pages
                           A   523    ;   85			for(counter = 0; counter < FLAS
0401A4                     A   524    L_6:
                           A   525    .LINE 85
                           A   526    
                           A   527    ;   86			{
                           A   528    ;   87				FLASH_PAGE = counter;
                           A   529    .LINE 87
                           A   530    
0401A4 DD7EFD              A   531    	LD	A,(IX+%FFFFFFFD)
0401A7 ED39FC              A   532    	OUT0	(252),A
                           A   533    ;   88				FLASH_PGCTL = 0x02;			
                           A   534    .LINE 88
                           A   535    
0401AA 3E02                A   536    	LD	A,%2
0401AC ED39FF              A   537    	OUT0	(255),A
                           A   538    ;   89	
                           A   539    ;   90				do
0401AF                     A   540    L_4:
                           A   541    .LINE 90
                           A   542    
                           A   543    ;   91				{
                           A   544    ;   92					value = FLASH_PGCTL;
                           A   545    .LINE 92
                           A   546    
0401AF ED38FF              A   547    	IN0	A,(255)
0401B2 DD77F6              A   548    	LD	(IX+%FFFFFFF6),A
                           A   549    ;   93				}
                           A   550    ;   94				while(value & 0x02);// wait
                           A   551    .LINE 94
                           A   552    
0401B5 E602                A   553    	AND	A,%2
0401B7 20 F6               A   554    	JR	NZ,L_4
0401B9 DD07FD              A   555    	LD	BC,(IX+%FFFFFFFD)
0401BC 03                  A   556    	INC	BC
0401BD DD0FFD              A   557    	LD	(IX+%FFFFFFFD),BC
0401C0 01800000            A   558    	LD	BC,128
0401C4 DD27FD              A   559    	LD	HL,(IX+%FFFFFFFD)
0401C7 B7                  A   560    	OR	A,A
0401C8 ED42                A   561    	SBC	HL,BC
0401CA 38 D8               A   562    	JR	C,L_6
                           A   563    ;   95			}
                           A   564    ;   96			
                           A   565    ;   97			// determine number of pages to
                           A   566    ;   98			pagemax = size/PAGESIZE;
                           A   567    ;   99			if(size%PAGESIZE) // last page 
                           A   568    .LINE 99
                           A   569    
0401CC 01FF0300            A   570    	LD	BC,1023
0401D0 DD27ED              A   571    	LD	HL,(IX+%FFFFFFED)
0401D3 CD 6A 44 04         A   572    	CALL	__iand
0401D7 DD2FF0              A   573    	LD	(IX+%FFFFFFF0),HL
0401DA CD 5B 43 04         A   574    	CALL	__icmpzero
                           A   575    ;  100			{
                           A   576    ;  101				pagemax += 1;
                           A   577    ;  102				lastpagebytes = size%PAGESI
                           A   578    ;  103			}
                           A   579    ;  104			else lastpagebytes = PAGESIZE; 
                           A   580    .LINE 104
                           A   581    
                           A   582    ;  105	
                           A   583    ;  106			//waitZDI(FEEDBACK_ERASEDONE, p
                           A   584    ;  107	
                           A   585    ;  108			// write out each page to flash
                           A   586    ;  109			for(counter = 0; counter < page
                           A   587    .LINE 109
                           A   588    
0401DE 01000000            A   589    	LD	BC,0
0401E2 DD0FFD              A   590    	LD	(IX+%FFFFFFFD),BC
0401E5 18 50               A   591    	JR	L_18
0401E7                     A   592    L_16:
                           A   593    ;  110			{
                           A   594    ;  111				if(counter == (pagemax - 1)
                           A   595    .LINE 111
                           A   596    
0401E7 DD31F3              A   597    	LD	IY,(IX+%FFFFFFF3)
0401EA ED23FF              A   598    	LEA	HL,IY+%FFFFFFFF
0401ED DD07FD              A   599    	LD	BC,(IX+%FFFFFFFD)
0401F0 B7                  A   600    	OR	A,A
0401F1 ED42                A   601    	SBC	HL,BC
0401F3 20 15               A   602    	JR	NZ,L_14
                           A   603    ;  112					fastmemcpy(addressto,ad
                           A   604    .LINE 112
                           A   605    
0401F5 DD07EA              A   606    	LD	BC,(IX+%FFFFFFEA)
0401F8 C5                  A   607    	PUSH	BC
0401F9 DD07F7              A   608    	LD	BC,(IX+%FFFFFFF7)
0401FC C5                  A   609    	PUSH	BC
0401FD DD07FA              A   610    	LD	BC,(IX+%FFFFFFFA)
040200 C5                  A   611    	PUSH	BC
040201 CD 26 01 04         A   612    	CALL	_fastmemcpy
040205 C1                  A   613    	POP	BC
040206 C1                  A   614    	POP	BC
040207 C1                  A   615    	POP	BC
                           A   616    ;  113				else 
                           A   617    .LINE 113
                           A   618    
040208 18 14               A   619    	JR	L_15
04020A                     A   620    L_14:
                           A   621    ;  114					fastmemcpy(addressto,ad
                           A   622    .LINE 114
                           A   623    
04020A 01000400            A   624    	LD	BC,1024
04020E C5                  A   625    	PUSH	BC
04020F DD07F7              A   626    	LD	BC,(IX+%FFFFFFF7)
040212 C5                  A   627    	PUSH	BC
040213 DD07FA              A   628    	LD	BC,(IX+%FFFFFFFA)
040216 C5                  A   629    	PUSH	BC
040217 CD 26 01 04         A   630    	CALL	_fastmemcpy
04021B C1                  A   631    	POP	BC
04021C C1                  A   632    	POP	BC
04021D C1                  A   633    	POP	BC
04021E                     A   634    L_15:
                           A   635    ;  115			
                           A   636    ;  116				addressto += PAGESIZE;
                           A   637    .LINE 116
                           A   638    
04021E 01000400            A   639    	LD	BC,1024
040222 DD27FA              A   640    	LD	HL,(IX+%FFFFFFFA)
040225 09                  A   641    	ADD	HL,BC
040226 DD2FFA              A   642    	LD	(IX+%FFFFFFFA),HL
                           A   643    ;  117				addressfrom += PAGESIZE;
                           A   644    .LINE 117
                           A   645    
040229 DD27F7              A   646    	LD	HL,(IX+%FFFFFFF7)
04022C 09                  A   647    	ADD	HL,BC
04022D DD2FF7              A   648    	LD	(IX+%FFFFFFF7),HL
040230 DD07FD              A   649    	LD	BC,(IX+%FFFFFFFD)
040233 03                  A   650    	INC	BC
040234 DD0FFD              A   651    	LD	(IX+%FFFFFFFD),BC
                           A   652    ;  118				//timer = 0;
                           A   653    ;  119				//while(timer++ < 32768);
                           A   654    ;  120				////waitZDI(FEEDBACK_PAGEWR
                           A   655    ;  121			}
040237                     A   656    L_18:
                           A   657    .LINE 121
                           A   658    
040237 DD07F3              A   659    	LD	BC,(IX+%FFFFFFF3)
04023A DD27FD              A   660    	LD	HL,(IX+%FFFFFFFD)
04023D B7                  A   661    	OR	A,A
04023E ED42                A   662    	SBC	HL,BC
040240 38 A5               A   663    	JR	C,L_16
                           A   664    ;  122			lockFlashKeyRegister();	// lock
                           A   665    .LINE 122
                           A   666    
040242 CD 11 01 04         A   667    	CALL	_lockFlashKeyRegister
                           A   668    ;  123			//waitZDI(FEEDBACK_PAGEWRITTEN,
                           A   669    ;  124		}
                           A   670    ;  125		else //waitZDI(FEEDBACK_OPEN, 0);
                           A   671    .LINE 125
                           A   672    
040246 18 02               A   673    	JR	L_25
                           A   674    ;  126		while(1);
040248                     A   675    L_22:
                           A   676    .LINE 126
                           A   677    
040248 18 FE               A   678    	JR	L_22
04024A                     A   679    L_25:
                           A   680    ;  127		return 0;
                           A   681    .LINE 127
                           A   682    
04024A B7                  A   683    	OR	A,A
04024B ED62                A   684    	SBC	HL,HL
                           A   685    ;  128	}
                           A   686    .LINE 128
                           A   687    
04024D DDF9                A   688    	LD	SP,IX
04024F DDE1                A   689    	POP	IX
040251 C9                  A   690    	RET	
                           A   691    
                           A   692    
                           A   693    ;**************************** _main ***********
                           A   694    ;Name                         Addr/Register   S
                           A   695    ;_lockFlashKeyRegister               IMPORT  --
                           A   696    ;_fastmemcpy                         IMPORT  --
                           A   697    ;_delayms                            IMPORT  --
                           A   698    ;_sendStatus                         IMPORT  --
                           A   699    ;_init_UART0                         IMPORT  --
                           A   700    ;_init_spi                           IMPORT  --
                           A   701    ;lastpagebytes                        IX-22    
                           A   702    ;size                                 IX-19    
                           A   703    ;G_0                                  IX-16    
                           A   704    ;pagemax                              IX-13    
                           A   705    ;value                                IX-10    
                           A   706    ;addressfrom                           IX-9    
                           A   707    ;addressto                             IX-6    
                           A   708    ;counter                               IX-3    
                           A   709    ;argv                                  IX+9    
                           A   710    ;argc                                  IX+6    
                           A   711    
                           A   712    
                           A   713    ; Stack Frame Size: 34 (bytes)
                           A   714    ;       Spill Code: 0 (instruction)
                           A   715    
                           A   716    
                           A   717    .ENDFUNC "main",128,"_main"
                           A   718    	XREF _fastmemcpy:ROM
                           A   719    	XREF _lockFlashKeyRegister:ROM
                           A   720    	XREF _init_UART0:ROM
                           A   721    	XREF _sendStatus:ROM
                           A   722    	XREF _delayms:ROM
                           A   723    	XREF _init_spi:ROM
                           A   724    	XREF __iand:ROM
                           A   725    	XREF __icmpzero:ROM
                           A   726    	XDEF _main
                           A   727    	XDEF _fs
                           A   728    	END


Errors: 0
Warnings: 0
Lines Assembled: 729
