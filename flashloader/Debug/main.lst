Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED20-Oct-23     22:41:23     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
044544                     A   268    _fs:
044544                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	
                           A   282    ;    6	#define PAGESIZE	1024
                           A   283    ;    7	#define FLASHPAGES	128
                           A   284    ;    8	#define FLASHSTART	0x0
                           A   285    ;    9	
                           A   286    ;   10	#define MOSFILENAME	"MOS.bin"
                           A   287    ;   11	#define LOADADDRESS	0x50000
                           A   288    ;   12	
                           A   289    ;   13	enum {
                           A   290    ;   14		FEEDBACK_OPEN,
                           A   291    ;   15		FEEDBACK_FILEDONE,
                           A   292    ;   16		FEEDBACK_PROCEED,
                           A   293    ;   17		FEEDBACK_ERASEDONE,
                           A   294    ;   18		FEEDBACK_PAGEWRITTEN,
                           A   295    ;   19	};
                           A   296    ;   20	
                           A   297    ;   21	extern void waitZDI(UINT8 status, UINT2
                           A   298    ;   22	extern void enableFlashKeyRegister(void
                           A   299    ;   23	extern void lockFlashKeyRegister(void);
                           A   300    ;   24	extern void fastmemcpy(UINT24 destinati
                           A   301    ;   25	extern void reset(void);
                           A   302    ;   26	
                           A   303    ;   27	FATFS 	fs;
                           A   304    	SEGMENT CODE
                           A   305    ;   28	
                           A   306    ;   29	int main(int argc, char * argv[]) {
040161                     A   307    _main:
                           A   308    .DEFINE "_main"
                           A   309    
                           A   310    .VALUE _main
                           A   311    
                           A   312    .CLASS 2
                           A   313    
                           A   314    .TYPE 68
                           A   315    
                           A   316    .ENDEF
                           A   317    
                           A   318    .BEGFUNC "main",29,"_main"
                           A   319    
                           A   320    .LINE 29
                           A   321    
                           A   322    .DEFINE "argc"
                           A   323    
                           A   324    .CLASS 65
                           A   325    
                           A   326    .VALUE 6
                           A   327    
                           A   328    .TYPE 4
                           A   329    
                           A   330    .ENDEF
                           A   331    
                           A   332    .DEFINE "argv"
                           A   333    
                           A   334    .CLASS 65
                           A   335    
                           A   336    .VALUE 9
                           A   337    
                           A   338    .TYPE 290
                           A   339    
                           A   340    .ENDEF
                           A   341    
                           A   342    .DEFINE "counter"
                           A   343    
                           A   344    .CLASS 65
                           A   345    
                           A   346    .VALUE -3
                           A   347    
                           A   348    .TYPE 14
                           A   349    
                           A   350    .ENDEF
                           A   351    
                           A   352    .DEFINE "pagemax"
                           A   353    
                           A   354    .CLASS 65
                           A   355    
                           A   356    .VALUE -6
                           A   357    
                           A   358    .TYPE 14
                           A   359    
                           A   360    .ENDEF
                           A   361    
                           A   362    .DEFINE "size"
                           A   363    
                           A   364    .CLASS 65
                           A   365    
                           A   366    .VALUE -9
                           A   367    
                           A   368    .TYPE 14
                           A   369    
                           A   370    .ENDEF
                           A   371    
                           A   372    .DEFINE "addressto"
                           A   373    
                           A   374    .CLASS 65
                           A   375    
                           A   376    .VALUE -12
                           A   377    
                           A   378    .TYPE 14
                           A   379    
                           A   380    .ENDEF
                           A   381    
                           A   382    .DEFINE "addressfrom"
                           A   383    
                           A   384    .CLASS 65
                           A   385    
                           A   386    .VALUE -15
                           A   387    
                           A   388    .TYPE 14
                           A   389    
                           A   390    .ENDEF
                           A   391    
                           A   392    .DEFINE "value"
                           A   393    
                           A   394    .CLASS 65
                           A   395    
                           A   396    .VALUE -16
                           A   397    
                           A   398    .TYPE 12
                           A   399    
                           A   400    .ENDEF
                           A   401    
                           A   402    .DEFINE "lastpagebytes"
                           A   403    
                           A   404    .CLASS 65
                           A   405    
                           A   406    .VALUE -19
                           A   407    
                           A   408    .TYPE 14
                           A   409    
                           A   410    .ENDEF
                           A   411    
                           A   412    .DEFINE "fr"
                           A   413    
                           A   414    .CLASS 65
                           A   415    
                           A   416    .VALUE -22
                           A   417    
                           A   418    .TYPE 4
                           A   419    
                           A   420    .ENDEF
                           A   421    
                           A   422    .DEFINE "br"
                           A   423    
                           A   424    .CLASS 65
                           A   425    
                           A   426    .VALUE -28
                           A   427    
                           A   428    .TYPE 14
                           A   429    
                           A   430    .ENDEF
                           A   431    
                           A   432    .DEFINE "dest"
                           A   433    
                           A   434    .CLASS 65
                           A   435    
                           A   436    .VALUE -31
                           A   437    
                           A   438    .TYPE 33
                           A   439    
                           A   440    .ENDEF
                           A   441    
                           A   442    .DEFINE "timer"
                           A   443    
                           A   444    .CLASS 65
                           A   445    
                           A   446    .VALUE -34
                           A   447    
                           A   448    .TYPE 14
                           A   449    
                           A   450    .ENDEF
                           A   451    
                           A   452    .DEFINE "fil"
                           A   453    
                           A   454    .CLASS 65
                           A   455    
                           A   456    .VALUE -63
                           A   457    
                           A   458    .TAG "NONAME2"
                           A   459    
                           A   460    .TYPE 8
                           A   461    
                           A   462    .ENDEF
                           A   463    
040161 DDE5                A   464    	PUSH	IX
040163 DD210000 00         A   465    	LD	IX,0
040168 DD39                A   466    	ADD	IX,SP
04016A ED22C1              A   467    	LEA	HL,IX+%FFFFFFC1
04016D F9                  A   468    	LD	SP,HL
                           A   469    ;   30		FRESULT	fr;
                           A   470    ;   31		FIL	   	fil;
                           A   471    ;   32		UINT24  br;	
                           A   472    ;   33		void * 	dest;
                           A   473    ;   34		UINT24 size;
                           A   474    ;   35		
                           A   475    ;   36		UINT24	counter,pagemax, lastpageby
                           A   476    ;   37		UINT24 addressto,addressfrom;
                           A   477    ;   38		UINT8	value;
                           A   478    ;   39		UINT24 timer;
                           A   479    ;   40		
                           A   480    ;   41		waitZDI(1,0);
                           A   481    .LINE 41
                           A   482    
04016E 01000000            A   483    	LD	BC,0
040172 C5                  A   484    	PUSH	BC
040173 01010000            A   485    	LD	BC,1
040177 C5                  A   486    	PUSH	BC
040178 CD 45 01 04         A   487    	CALL	_waitZDI
04017C C1                  A   488    	POP	BC
04017D C1                  A   489    	POP	BC
                           A   490    ;   42		
                           A   491    ;   43		init_spi();
                           A   492    .LINE 43
                           A   493    
04017E CD B7 3E 04         A   494    	CALL	_init_spi
                           A   495    ;   44		f_mount(&fs, "", 1);
                           A   496    .LINE 44
                           A   497    
040182 01010000            A   498    	LD	BC,1
040186 C5                  A   499    	PUSH	BC
040187 01 22 45 04         A   500    	LD	BC,L__0
04018B C5                  A   501    	PUSH	BC
04018C 01 44 45 04         A   502    	LD	BC,_fs
040190 C5                  A   503    	PUSH	BC
040191 CD 21 32 04         A   504    	CALL	_f_mount
040195 C1                  A   505    	POP	BC
040196 C1                  A   506    	POP	BC
040197 C1                  A   507    	POP	BC
                           A   508    ;   45	
                           A   509    ;   46		addressto = FLASHSTART;
                           A   510    .LINE 46
                           A   511    
040198 01000000            A   512    	LD	BC,0
04019C DD0FF4              A   513    	LD	(IX+%FFFFFFF4),BC
                           A   514    ;   47		addressfrom = LOADADDRESS;
                           A   515    .LINE 47
                           A   516    
04019F 01000005            A   517    	LD	BC,327680
0401A3 DD0FF1              A   518    	LD	(IX+%FFFFFFF1),BC
                           A   519    ;   48	
                           A   520    ;   49		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   521    .LINE 49
                           A   522    
0401A6 01010000            A   523    	LD	BC,1
0401AA C5                  A   524    	PUSH	BC
0401AB 01 23 45 04         A   525    	LD	BC,L__1
0401AF C5                  A   526    	PUSH	BC
0401B0 ED65C1              A   527    	PEA	IX+%FFFFFFC1
0401B3 CD AD 32 04         A   528    	CALL	_f_open
0401B7 C1                  A   529    	POP	BC
0401B8 C1                  A   530    	POP	BC
0401B9 C1                  A   531    	POP	BC
0401BA DD2FEA              A   532    	LD	(IX+%FFFFFFEA),HL
                           A   533    ;   50		if(fr == FR_OK) {
                           A   534    .LINE 50
                           A   535    
0401BD CD D4 42 04         A   536    	CALL	__icmpzero
0401C1 C2 19 03 04         A   537    	JR	NZ,L_19
                           A   538    ;   51	
                           A   539    ;   52			di();
                           A   540    .LINE 52
                           A   541    
0401C5 F3                  A   542    	di
                           A   543    ;   53			size = f_size(&fil);
                           A   544    .LINE 53
                           A   545    
0401C6 DD07CC              A   546    	LD	BC,(IX+%FFFFFFCC)
0401C9 DD0FF7              A   547    	LD	(IX+%FFFFFFF7),BC
                           A   548    ;   54			waitZDI(FEEDBACK_OPEN, size);
                           A   549    .LINE 54
                           A   550    
0401CC C5                  A   551    	PUSH	BC
0401CD 01000000            A   552    	LD	BC,0
0401D1 C5                  A   553    	PUSH	BC
0401D2 CD 45 01 04         A   554    	CALL	_waitZDI
0401D6 C1                  A   555    	POP	BC
0401D7 C1                  A   556    	POP	BC
                           A   557    ;   55	
                           A   558    ;   56			fr = f_read(&fil, (void *)LOADA
                           A   559    .LINE 56
                           A   560    
0401D8 ED65E4              A   561    	PEA	IX+%FFFFFFE4
0401DB DD07F7              A   562    	LD	BC,(IX+%FFFFFFF7)
0401DE C5                  A   563    	PUSH	BC
0401DF 01000005            A   564    	LD	BC,327680
0401E3 C5                  A   565    	PUSH	BC
0401E4 ED65C1              A   566    	PEA	IX+%FFFFFFC1
0401E7 CD FD 33 04         A   567    	CALL	_f_read
0401EB C1                  A   568    	POP	BC
0401EC C1                  A   569    	POP	BC
0401ED C1                  A   570    	POP	BC
0401EE C1                  A   571    	POP	BC
0401EF DD2FEA              A   572    	LD	(IX+%FFFFFFEA),HL
                           A   573    ;   57	
                           A   574    ;   58			f_close(&fil);
                           A   575    .LINE 58
                           A   576    
0401F2 ED65C1              A   577    	PEA	IX+%FFFFFFC1
0401F5 CD 38 37 04         A   578    	CALL	_f_close
0401F9 C1                  A   579    	POP	BC
                           A   580    ;   59			waitZDI(FEEDBACK_FILEDONE, br);
                           A   581    .LINE 59
                           A   582    
0401FA DD07E4              A   583    	LD	BC,(IX+%FFFFFFE4)
0401FD C5                  A   584    	PUSH	BC
0401FE 01010000            A   585    	LD	BC,1
040202 C5                  A   586    	PUSH	BC
040203 CD 45 01 04         A   587    	CALL	_waitZDI
040207 C1                  A   588    	POP	BC
040208 C1                  A   589    	POP	BC
                           A   590    ;   60			
                           A   591    ;   61			// Wait for user to acknowledge
                           A   592    ;   62			waitZDI(FEEDBACK_PROCEED, 0);
                           A   593    .LINE 62
                           A   594    
040209 01000000            A   595    	LD	BC,0
04020D C5                  A   596    	PUSH	BC
04020E 01020000            A   597    	LD	BC,2
040212 C5                  A   598    	PUSH	BC
040213 CD 45 01 04         A   599    	CALL	_waitZDI
040217 C1                  A   600    	POP	BC
040218 C1                  A   601    	POP	BC
                           A   602    ;   63			
                           A   603    ;   64			// Unprotect and erase flash
                           A   604    ;   65			enableFlashKeyRegister();	// 
                           A   605    .LINE 65
                           A   606    
040219 CD F9 00 04         A   607    	CALL	_enableFlashKeyRegister
                           A   608    ;   66			FLASH_PROT = 0;				// 
                           A   609    .LINE 66
                           A   610    
04021D AF                  A   611    	XOR	A,A
04021E ED39FA              A   612    	OUT0	(250),A
                           A   613    ;   67			enableFlashKeyRegister();	// 
                           A   614    .LINE 67
                           A   615    
040221 CD F9 00 04         A   616    	CALL	_enableFlashKeyRegister
                           A   617    ;   68			FLASH_FDIV = 0x5F;			// 
                           A   618    .LINE 68
                           A   619    
040225 3E5F                A   620    	LD	A,%5F
040227 ED39F9              A   621    	OUT0	(249),A
                           A   622    ;   69	
                           A   623    ;   70			// Erase all flash pages
                           A   624    ;   71			for(counter = 0; counter < FLAS
                           A   625    .LINE 71
                           A   626    
04022A 01000000            A   627    	LD	BC,0
04022E DD0FFD              A   628    	LD	(IX+%FFFFFFFD),BC
040231 18 1C               A   629    	JR	L_5
040233                     A   630    L_3:
                           A   631    ;   72			{
                           A   632    ;   73				FLASH_PAGE = counter;
                           A   633    .LINE 73
                           A   634    
040233 DD7EFD              A   635    	LD	A,(IX+%FFFFFFFD)
040236 ED39FC              A   636    	OUT0	(252),A
                           A   637    ;   74				FLASH_PGCTL = 0x02;			
                           A   638    .LINE 74
                           A   639    
040239 3E02                A   640    	LD	A,%2
04023B ED39FF              A   641    	OUT0	(255),A
                           A   642    ;   75	
                           A   643    ;   76				do
04023E                     A   644    L_1:
                           A   645    .LINE 76
                           A   646    
                           A   647    ;   77				{
                           A   648    ;   78					value = FLASH_PGCTL;
                           A   649    .LINE 78
                           A   650    
04023E ED38FF              A   651    	IN0	A,(255)
040241 DD77F0              A   652    	LD	(IX+%FFFFFFF0),A
                           A   653    ;   79				}
                           A   654    ;   80				while(value & 0x02);// wait
                           A   655    .LINE 80
                           A   656    
040244 E602                A   657    	AND	A,%2
040246 20 F6               A   658    	JR	NZ,L_1
040248 DD07FD              A   659    	LD	BC,(IX+%FFFFFFFD)
04024B 03                  A   660    	INC	BC
04024C DD0FFD              A   661    	LD	(IX+%FFFFFFFD),BC
                           A   662    ;   81			}
04024F                     A   663    L_5:
                           A   664    .LINE 81
                           A   665    
04024F 01800000            A   666    	LD	BC,128
040253 DD27FD              A   667    	LD	HL,(IX+%FFFFFFFD)
040256 B7                  A   668    	OR	A,A
040257 ED42                A   669    	SBC	HL,BC
040259 38 D8               A   670    	JR	C,L_3
                           A   671    ;   82			
                           A   672    ;   83			// determine number of pages to
                           A   673    ;   84			pagemax = size/PAGESIZE;
                           A   674    .LINE 84
                           A   675    
04025B DD27F7              A   676    	LD	HL,(IX+%FFFFFFF7)
04025E 3E0A                A   677    	LD	A,%A
040260 CD 4B 43 04         A   678    	CALL	__ishru_b
040264 DD2FFA              A   679    	LD	(IX+%FFFFFFFA),HL
                           A   680    ;   85			if(size%PAGESIZE) // last page 
                           A   681    .LINE 85
                           A   682    
040267 01FF0300            A   683    	LD	BC,1023
04026B DD27F7              A   684    	LD	HL,(IX+%FFFFFFF7)
04026E CD E3 43 04         A   685    	CALL	__iand
040272 DD2FE7              A   686    	LD	(IX+%FFFFFFE7),HL
040275 CD D4 42 04         A   687    	CALL	__icmpzero
040279 28 0F               A   688    	JR	Z,L_8
                           A   689    ;   86			{
                           A   690    ;   87				pagemax += 1;
                           A   691    .LINE 87
                           A   692    
04027B DD07FA              A   693    	LD	BC,(IX+%FFFFFFFA)
04027E 03                  A   694    	INC	BC
04027F DD0FFA              A   695    	LD	(IX+%FFFFFFFA),BC
                           A   696    ;   88				lastpagebytes = size%PAGESI
                           A   697    .LINE 88
                           A   698    
040282 DD07E7              A   699    	LD	BC,(IX+%FFFFFFE7)
040285 DD0FED              A   700    	LD	(IX+%FFFFFFED),BC
                           A   701    ;   89			}
                           A   702    ;   90			else lastpagebytes = PAGESIZE; 
                           A   703    .LINE 90
                           A   704    
040288 18 07               A   705    	JR	L_9
04028A                     A   706    L_8:
04028A 01000400            A   707    	LD	BC,1024
04028E DD0FED              A   708    	LD	(IX+%FFFFFFED),BC
040291                     A   709    L_9:
                           A   710    ;   91	
                           A   711    ;   92			waitZDI(FEEDBACK_ERASEDONE, pag
                           A   712    .LINE 92
                           A   713    
040291 DD07FA              A   714    	LD	BC,(IX+%FFFFFFFA)
040294 C5                  A   715    	PUSH	BC
040295 01030000            A   716    	LD	BC,3
040299 C5                  A   717    	PUSH	BC
04029A CD 45 01 04         A   718    	CALL	_waitZDI
04029E C1                  A   719    	POP	BC
04029F C1                  A   720    	POP	BC
                           A   721    ;   93	
                           A   722    ;   94			// write out each page to flash
                           A   723    ;   95			for(counter = 0; counter < page
                           A   724    .LINE 95
                           A   725    
0402A0 01000000            A   726    	LD	BC,0
0402A4 DD0FFD              A   727    	LD	(IX+%FFFFFFFD),BC
0402A7 18 50               A   728    	JR	L_16
0402A9                     A   729    L_14:
                           A   730    ;   96			{
                           A   731    ;   97				if(counter == (pagemax - 1)
                           A   732    .LINE 97
                           A   733    
0402A9 DD31FA              A   734    	LD	IY,(IX+%FFFFFFFA)
0402AC ED23FF              A   735    	LEA	HL,IY+%FFFFFFFF
0402AF DD07FD              A   736    	LD	BC,(IX+%FFFFFFFD)
0402B2 B7                  A   737    	OR	A,A
0402B3 ED42                A   738    	SBC	HL,BC
0402B5 20 15               A   739    	JR	NZ,L_12
                           A   740    ;   98					fastmemcpy(addressto,ad
                           A   741    .LINE 98
                           A   742    
0402B7 DD07ED              A   743    	LD	BC,(IX+%FFFFFFED)
0402BA C5                  A   744    	PUSH	BC
0402BB DD07F1              A   745    	LD	BC,(IX+%FFFFFFF1)
0402BE C5                  A   746    	PUSH	BC
0402BF DD07F4              A   747    	LD	BC,(IX+%FFFFFFF4)
0402C2 C5                  A   748    	PUSH	BC
0402C3 CD 26 01 04         A   749    	CALL	_fastmemcpy
0402C7 C1                  A   750    	POP	BC
0402C8 C1                  A   751    	POP	BC
0402C9 C1                  A   752    	POP	BC
                           A   753    ;   99				else 
                           A   754    .LINE 99
                           A   755    
0402CA 18 14               A   756    	JR	L_13
0402CC                     A   757    L_12:
                           A   758    ;  100					fastmemcpy(addressto,ad
                           A   759    .LINE 100
                           A   760    
0402CC 01000400            A   761    	LD	BC,1024
0402D0 C5                  A   762    	PUSH	BC
0402D1 DD07F1              A   763    	LD	BC,(IX+%FFFFFFF1)
0402D4 C5                  A   764    	PUSH	BC
0402D5 DD07F4              A   765    	LD	BC,(IX+%FFFFFFF4)
0402D8 C5                  A   766    	PUSH	BC
0402D9 CD 26 01 04         A   767    	CALL	_fastmemcpy
0402DD C1                  A   768    	POP	BC
0402DE C1                  A   769    	POP	BC
0402DF C1                  A   770    	POP	BC
0402E0                     A   771    L_13:
                           A   772    ;  101			
                           A   773    ;  102				addressto += PAGESIZE;
                           A   774    .LINE 102
                           A   775    
0402E0 01000400            A   776    	LD	BC,1024
0402E4 DD27F4              A   777    	LD	HL,(IX+%FFFFFFF4)
0402E7 09                  A   778    	ADD	HL,BC
0402E8 DD2FF4              A   779    	LD	(IX+%FFFFFFF4),HL
                           A   780    ;  103				addressfrom += PAGESIZE;
                           A   781    .LINE 103
                           A   782    
0402EB DD27F1              A   783    	LD	HL,(IX+%FFFFFFF1)
0402EE 09                  A   784    	ADD	HL,BC
0402EF DD2FF1              A   785    	LD	(IX+%FFFFFFF1),HL
0402F2 DD07FD              A   786    	LD	BC,(IX+%FFFFFFFD)
0402F5 03                  A   787    	INC	BC
0402F6 DD0FFD              A   788    	LD	(IX+%FFFFFFFD),BC
                           A   789    ;  104				//timer = 0;
                           A   790    ;  105				//while(timer++ < 32768);
                           A   791    ;  106				//waitZDI(FEEDBACK_PAGEWRIT
                           A   792    ;  107			}
0402F9                     A   793    L_16:
                           A   794    .LINE 107
                           A   795    
0402F9 DD07FA              A   796    	LD	BC,(IX+%FFFFFFFA)
0402FC DD27FD              A   797    	LD	HL,(IX+%FFFFFFFD)
0402FF B7                  A   798    	OR	A,A
040300 ED42                A   799    	SBC	HL,BC
040302 38 A5               A   800    	JR	C,L_14
                           A   801    ;  108			lockFlashKeyRegister();	// lock
                           A   802    .LINE 108
                           A   803    
040304 CD 11 01 04         A   804    	CALL	_lockFlashKeyRegister
                           A   805    ;  109			waitZDI(FEEDBACK_PAGEWRITTEN, c
                           A   806    .LINE 109
                           A   807    
040308 DD07FD              A   808    	LD	BC,(IX+%FFFFFFFD)
04030B C5                  A   809    	PUSH	BC
04030C 01040000            A   810    	LD	BC,4
040310 C5                  A   811    	PUSH	BC
040311 CD 45 01 04         A   812    	CALL	_waitZDI
040315 C1                  A   813    	POP	BC
040316 C1                  A   814    	POP	BC
                           A   815    ;  110		}
                           A   816    ;  111		else waitZDI(FEEDBACK_OPEN, 0);
                           A   817    .LINE 111
                           A   818    
040317 18 0C               A   819    	JR	L_21
040319                     A   820    L_19:
040319 01000000            A   821    	LD	BC,0
04031D C5                  A   822    	PUSH	BC
04031E C5                  A   823    	PUSH	BC
04031F CD 45 01 04         A   824    	CALL	_waitZDI
040323 C1                  A   825    	POP	BC
040324 C1                  A   826    	POP	BC
                           A   827    ;  112		while(1);
040325                     A   828    L_21:
                           A   829    .LINE 112
                           A   830    
040325 18 FE               A   831    	JR	L_21
                           A   832    ;  113		return 0;
                           A   833    ;  114	}
                           A   834    .LINE 114
                           A   835    
040327 DDF9                A   836    	LD	SP,IX
040329 DDE1                A   837    	POP	IX
04032B C9                  A   838    	RET	
                           A   839    
                           A   840    
                           A   841    ;**************************** _main ***********
                           A   842    ;Name                         Addr/Register   S
                           A   843    ;_lockFlashKeyRegister               IMPORT  --
                           A   844    ;_fastmemcpy                         IMPORT  --
                           A   845    ;_enableFlashKeyRegister             IMPORT  --
                           A   846    ;_f_close                            IMPORT  --
                           A   847    ;_f_read                             IMPORT  --
                           A   848    ;_f_open                             IMPORT  --
                           A   849    ;_fs                                 STATIC    
                           A   850    ;_f_mount                            IMPORT  --
                           A   851    ;_init_spi                           IMPORT  --
                           A   852    ;_waitZDI                            IMPORT  --
                           A   853    ;fil                                  IX-63    
                           A   854    ;timer                                IX-34    
                           A   855    ;dest                                 IX-31    
                           A   856    ;br                                   IX-28    
                           A   857    ;G_0                                  IX-25    
                           A   858    ;fr                                   IX-22    
                           A   859    ;lastpagebytes                        IX-19    
                           A   860    ;value                                IX-16    
                           A   861    ;addressfrom                          IX-15    
                           A   862    ;addressto                            IX-12    
                           A   863    ;size                                  IX-9    
                           A   864    ;pagemax                               IX-6    
                           A   865    ;counter                               IX-3    
                           A   866    ;argv                                  IX+9    
                           A   867    ;argc                                  IX+6    
                           A   868    
                           A   869    
                           A   870    ; Stack Frame Size: 75 (bytes)
                           A   871    ;       Spill Code: 0 (instruction)
                           A   872    
                           A   873    
                           A   874    .ENDFUNC "main",114,"_main"
                           A   875    	SEGMENT STRSECT
044522                     A   876    L__0:
044522 00                  A   877    	DB	0
044523                     A   878    L__1:
044523 4D4F532E 62696E     A   879    	DB	"MOS.bin"
04452A 00                  A   880    	DB	0
                           A   881    	XREF _fastmemcpy:ROM
                           A   882    	XREF _lockFlashKeyRegister:ROM
                           A   883    	XREF _enableFlashKeyRegister:ROM
                           A   884    	XREF _waitZDI:ROM
                           A   885    	XREF _init_spi:ROM
                           A   886    	XREF _f_mount:ROM
                           A   887    	XREF _f_read:ROM
                           A   888    	XREF _f_close:ROM
                           A   889    	XREF _f_open:ROM
                           A   890    	XREF __iand:ROM
                           A   891    	XREF __icmpzero:ROM
                           A   892    	XREF __ishru_b:ROM
                           A   893    	XDEF _main
                           A   894    	XDEF _fs
                           A   895    	END


Errors: 0
Warnings: 0
Lines Assembled: 896
