Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED21-Oct-23     11:17:21     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
04448F                     A   268    _fs:
04448F                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	
                           A   282    ;    6	#define PAGESIZE	1024
                           A   283    ;    7	#define FLASHPAGES	128
                           A   284    ;    8	#define FLASHSTART	0x0
                           A   285    ;    9	
                           A   286    ;   10	#define MOSFILENAME	"MOS.bin"
                           A   287    ;   11	#define LOADADDRESS	0x50000
                           A   288    ;   12	#define DONE		0x70000
                           A   289    ;   13	#define	VALUESTART	0x80000
                           A   290    ;   14	
                           A   291    ;   15	extern void waitZDI(UINT8 status, UINT2
                           A   292    ;   16	extern void enableFlashKeyRegister(void
                           A   293    ;   17	extern void lockFlashKeyRegister(void);
                           A   294    ;   18	extern void fastmemcpy(UINT24 destinati
                           A   295    ;   19	extern void reset(void);
                           A   296    ;   20	
                           A   297    ;   21	FATFS 	fs;
                           A   298    	SEGMENT CODE
                           A   299    ;   22	
                           A   300    ;   23	int main(int argc, char * argv[]) {
04016A                     A   301    _main:
                           A   302    .DEFINE "_main"
                           A   303    
                           A   304    .VALUE _main
                           A   305    
                           A   306    .CLASS 2
                           A   307    
                           A   308    .TYPE 68
                           A   309    
                           A   310    .ENDEF
                           A   311    
                           A   312    .BEGFUNC "main",23,"_main"
                           A   313    
                           A   314    .LINE 23
                           A   315    
                           A   316    .DEFINE "argc"
                           A   317    
                           A   318    .CLASS 65
                           A   319    
                           A   320    .VALUE 6
                           A   321    
                           A   322    .TYPE 4
                           A   323    
                           A   324    .ENDEF
                           A   325    
                           A   326    .DEFINE "argv"
                           A   327    
                           A   328    .CLASS 65
                           A   329    
                           A   330    .VALUE 9
                           A   331    
                           A   332    .TYPE 290
                           A   333    
                           A   334    .ENDEF
                           A   335    
                           A   336    .DEFINE "counter"
                           A   337    
                           A   338    .CLASS 65
                           A   339    
                           A   340    .VALUE -3
                           A   341    
                           A   342    .TYPE 14
                           A   343    
                           A   344    .ENDEF
                           A   345    
                           A   346    .DEFINE "value"
                           A   347    
                           A   348    .CLASS 65
                           A   349    
                           A   350    .VALUE -4
                           A   351    
                           A   352    .TYPE 12
                           A   353    
                           A   354    .ENDEF
                           A   355    
                           A   356    .DEFINE "ptr"
                           A   357    
                           A   358    .CLASS 65
                           A   359    
                           A   360    .VALUE -7
                           A   361    
                           A   362    .TYPE 44
                           A   363    
                           A   364    .ENDEF
                           A   365    
                           A   366    .DEFINE "addressfrom"
                           A   367    
                           A   368    .CLASS 65
                           A   369    
                           A   370    .VALUE -10
                           A   371    
                           A   372    .TYPE 14
                           A   373    
                           A   374    .ENDEF
                           A   375    
                           A   376    .DEFINE "pagemax"
                           A   377    
                           A   378    .CLASS 65
                           A   379    
                           A   380    .VALUE -13
                           A   381    
                           A   382    .TYPE 14
                           A   383    
                           A   384    .ENDEF
                           A   385    
                           A   386    .DEFINE "addressto"
                           A   387    
                           A   388    .CLASS 65
                           A   389    
                           A   390    .VALUE -16
                           A   391    
                           A   392    .TYPE 14
                           A   393    
                           A   394    .ENDEF
                           A   395    
                           A   396    .DEFINE "size"
                           A   397    
                           A   398    .CLASS 65
                           A   399    
                           A   400    .VALUE -22
                           A   401    
                           A   402    .TYPE 14
                           A   403    
                           A   404    .ENDEF
                           A   405    
                           A   406    .DEFINE "lastpagebytes"
                           A   407    
                           A   408    .CLASS 65
                           A   409    
                           A   410    .VALUE -25
                           A   411    
                           A   412    .TYPE 14
                           A   413    
                           A   414    .ENDEF
                           A   415    
04016A DDE5                A   416    	PUSH	IX
04016C DD210000 00         A   417    	LD	IX,0
040171 DD39                A   418    	ADD	IX,SP
040173 ED22E7              A   419    	LEA	HL,IX+%FFFFFFE7
040176 F9                  A   420    	LD	SP,HL
                           A   421    ;   24		FRESULT	fr;
                           A   422    ;   25		FIL	   	fil;
                           A   423    ;   26		UINT24  br;	
                           A   424    ;   27		void * 	dest;
                           A   425    ;   28		UINT24 size;
                           A   426    ;   29		
                           A   427    ;   30		UINT24	counter,pagemax, lastpageby
                           A   428    ;   31		UINT24 addressto,addressfrom;
                           A   429    ;   32		UINT8	value;
                           A   430    ;   33		UINT24 timer;
                           A   431    ;   34	
                           A   432    ;   35		UINT8* ptr;
                           A   433    ;   36		
                           A   434    ;   37		*((UINT8*)DONE) = 0; 
                           A   435    .LINE 37
                           A   436    
040177 AF                  A   437    	XOR	A,A
040178 32000007            A   438    	LD	(458752),A
                           A   439    ;   38		ptr = (UINT8*)VALUESTART;
                           A   440    .LINE 38
                           A   441    
04017C 01000008            A   442    	LD	BC,524288
040180 DD0FF9              A   443    	LD	(IX+%FFFFFFF9),BC
                           A   444    ;   39		
                           A   445    ;   40		for(value = 0; value < 20; value++)
                           A   446    .LINE 40
                           A   447    
040183 DD36FC00            A   448    	LD	(IX+%FFFFFFFC),%0
040187 18 11               A   449    	JR	L_4
040189                     A   450    L_2:
                           A   451    ;   41			//waitZDI(value, value);
                           A   452    ;   42			*ptr = value;
                           A   453    .LINE 42
                           A   454    
040189 DD27F9              A   455    	LD	HL,(IX+%FFFFFFF9)
04018C DD7EFC              A   456    	LD	A,(IX+%FFFFFFFC)
04018F 77                  A   457    	LD	(HL),A
                           A   458    ;   43			ptr++;
                           A   459    .LINE 43
                           A   460    
040190 DD07F9              A   461    	LD	BC,(IX+%FFFFFFF9)
040193 03                  A   462    	INC	BC
040194 DD0FF9              A   463    	LD	(IX+%FFFFFFF9),BC
040197 DD34FC              A   464    	INC	(IX+%FFFFFFFC)
                           A   465    ;   44		}
04019A                     A   466    L_4:
                           A   467    .LINE 44
                           A   468    
04019A DD7EFC              A   469    	LD	A,(IX+%FFFFFFFC)
04019D FE14                A   470    	CP	A,%14
04019F 38 E8               A   471    	JR	C,L_2
                           A   472    ;   45		*((UINT8*)DONE) = 128;
                           A   473    .LINE 45
                           A   474    
0401A1 3E80                A   475    	LD	A,%80
0401A3 32000007            A   476    	LD	(458752),A
                           A   477    ;   46		waitZDI(1,0);
                           A   478    .LINE 46
                           A   479    
0401A7 01000000            A   480    	LD	BC,0
0401AB C5                  A   481    	PUSH	BC
0401AC 01010000            A   482    	LD	BC,1
0401B0 C5                  A   483    	PUSH	BC
0401B1 CD 45 01 04         A   484    	CALL	_waitZDI
0401B5 C1                  A   485    	POP	BC
0401B6 C1                  A   486    	POP	BC
                           A   487    ;   47		while(1);
0401B7                     A   488    L_7:
                           A   489    .LINE 47
                           A   490    
0401B7 18 FE               A   491    	JR	L_7
                           A   492    ;   48		
                           A   493    ;   49		
                           A   494    ;   50		
                           A   495    ;   51		
                           A   496    ;   52		
                           A   497    ;   53		
                           A   498    ;   54		waitZDI(1,0);
                           A   499    ;   55		
                           A   500    ;   56		init_spi();
                           A   501    ;   57		f_mount(&fs, "", 1);
                           A   502    ;   58	
                           A   503    ;   59		addressto = FLASHSTART;
                           A   504    ;   60		addressfrom = LOADADDRESS;
                           A   505    ;   61	
                           A   506    ;   62		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   507    ;   63		if(fr == FR_OK) {
                           A   508    ;   64	
                           A   509    ;   65			di();
                           A   510    ;   66			size = f_size(&fil);
                           A   511    ;   67			waitZDI(1, size);
                           A   512    ;   68	
                           A   513    ;   69			fr = f_read(&fil, (void *)LOADA
                           A   514    ;   70	
                           A   515    ;   71			f_close(&fil);
                           A   516    ;   72			waitZDI(1, br);
                           A   517    ;   73			
                           A   518    ;   74			// Wait for user to acknowledge
                           A   519    ;   75			waitZDI(1, 0);
                           A   520    ;   76			
                           A   521    ;   77			// Unprotect and erase flash
                           A   522    ;   78			enableFlashKeyRegister();	// 
                           A   523    ;   79			FLASH_PROT = 0;				// 
                           A   524    ;   80			enableFlashKeyRegister();	// 
                           A   525    ;   81			FLASH_FDIV = 0x5F;			// 
                           A   526    ;   82	
                           A   527    ;   83			// Erase all flash pages
                           A   528    ;   84			for(counter = 0; counter < FLAS
0401B9                     A   529    L_12:
                           A   530    .LINE 84
                           A   531    
                           A   532    ;   85			{
                           A   533    ;   86				FLASH_PAGE = counter;
                           A   534    .LINE 86
                           A   535    
0401B9 DD7EFD              A   536    	LD	A,(IX+%FFFFFFFD)
0401BC ED39FC              A   537    	OUT0	(252),A
                           A   538    ;   87				FLASH_PGCTL = 0x02;			
                           A   539    .LINE 87
                           A   540    
0401BF 3E02                A   541    	LD	A,%2
0401C1 ED39FF              A   542    	OUT0	(255),A
                           A   543    ;   88	
                           A   544    ;   89				do
0401C4                     A   545    L_10:
                           A   546    .LINE 89
                           A   547    
                           A   548    ;   90				{
                           A   549    ;   91					value = FLASH_PGCTL;
                           A   550    .LINE 91
                           A   551    
0401C4 ED38FF              A   552    	IN0	A,(255)
0401C7 DD77FC              A   553    	LD	(IX+%FFFFFFFC),A
                           A   554    ;   92				}
                           A   555    ;   93				while(value & 0x02);// wait
                           A   556    .LINE 93
                           A   557    
0401CA E602                A   558    	AND	A,%2
0401CC 20 F6               A   559    	JR	NZ,L_10
0401CE DD07FD              A   560    	LD	BC,(IX+%FFFFFFFD)
0401D1 03                  A   561    	INC	BC
0401D2 DD0FFD              A   562    	LD	(IX+%FFFFFFFD),BC
0401D5 01800000            A   563    	LD	BC,128
0401D9 DD27FD              A   564    	LD	HL,(IX+%FFFFFFFD)
0401DC B7                  A   565    	OR	A,A
0401DD ED42                A   566    	SBC	HL,BC
0401DF 38 D8               A   567    	JR	C,L_12
                           A   568    ;   94			}
                           A   569    ;   95			
                           A   570    ;   96			// determine number of pages to
                           A   571    ;   97			pagemax = size/PAGESIZE;
                           A   572    ;   98			if(size%PAGESIZE) // last page 
                           A   573    .LINE 98
                           A   574    
0401E1 01FF0300            A   575    	LD	BC,1023
0401E5 DD27EA              A   576    	LD	HL,(IX+%FFFFFFEA)
0401E8 CD 37 43 04         A   577    	CALL	__iand
0401EC DD2FED              A   578    	LD	(IX+%FFFFFFED),HL
0401EF CD 28 42 04         A   579    	CALL	__icmpzero
                           A   580    ;   99			{
                           A   581    ;  100				pagemax += 1;
                           A   582    ;  101				lastpagebytes = size%PAGESI
                           A   583    ;  102			}
                           A   584    ;  103			else lastpagebytes = PAGESIZE; 
                           A   585    .LINE 103
                           A   586    
                           A   587    ;  104	
                           A   588    ;  105			waitZDI(1, pagemax);
                           A   589    .LINE 105
                           A   590    
0401F3 DD07F3              A   591    	LD	BC,(IX+%FFFFFFF3)
0401F6 C5                  A   592    	PUSH	BC
0401F7 01010000            A   593    	LD	BC,1
0401FB C5                  A   594    	PUSH	BC
0401FC CD 45 01 04         A   595    	CALL	_waitZDI
040200 C1                  A   596    	POP	BC
040201 C1                  A   597    	POP	BC
                           A   598    ;  106	
                           A   599    ;  107			// write out each page to flash
                           A   600    ;  108			for(counter = 0; counter < page
                           A   601    .LINE 108
                           A   602    
040202 01000000            A   603    	LD	BC,0
040206 DD0FFD              A   604    	LD	(IX+%FFFFFFFD),BC
040209 18 50               A   605    	JR	L_25
04020B                     A   606    L_23:
                           A   607    ;  109			{
                           A   608    ;  110				if(counter == (pagemax - 1)
                           A   609    .LINE 110
                           A   610    
04020B DD31F3              A   611    	LD	IY,(IX+%FFFFFFF3)
04020E ED23FF              A   612    	LEA	HL,IY+%FFFFFFFF
040211 DD07FD              A   613    	LD	BC,(IX+%FFFFFFFD)
040214 B7                  A   614    	OR	A,A
040215 ED42                A   615    	SBC	HL,BC
040217 20 15               A   616    	JR	NZ,L_21
                           A   617    ;  111					fastmemcpy(addressto,ad
                           A   618    .LINE 111
                           A   619    
040219 DD07E7              A   620    	LD	BC,(IX+%FFFFFFE7)
04021C C5                  A   621    	PUSH	BC
04021D DD07F6              A   622    	LD	BC,(IX+%FFFFFFF6)
040220 C5                  A   623    	PUSH	BC
040221 DD07F0              A   624    	LD	BC,(IX+%FFFFFFF0)
040224 C5                  A   625    	PUSH	BC
040225 CD 26 01 04         A   626    	CALL	_fastmemcpy
040229 C1                  A   627    	POP	BC
04022A C1                  A   628    	POP	BC
04022B C1                  A   629    	POP	BC
                           A   630    ;  112				else 
                           A   631    .LINE 112
                           A   632    
04022C 18 14               A   633    	JR	L_22
04022E                     A   634    L_21:
                           A   635    ;  113					fastmemcpy(addressto,ad
                           A   636    .LINE 113
                           A   637    
04022E 01000400            A   638    	LD	BC,1024
040232 C5                  A   639    	PUSH	BC
040233 DD07F6              A   640    	LD	BC,(IX+%FFFFFFF6)
040236 C5                  A   641    	PUSH	BC
040237 DD07F0              A   642    	LD	BC,(IX+%FFFFFFF0)
04023A C5                  A   643    	PUSH	BC
04023B CD 26 01 04         A   644    	CALL	_fastmemcpy
04023F C1                  A   645    	POP	BC
040240 C1                  A   646    	POP	BC
040241 C1                  A   647    	POP	BC
040242                     A   648    L_22:
                           A   649    ;  114			
                           A   650    ;  115				addressto += PAGESIZE;
                           A   651    .LINE 115
                           A   652    
040242 01000400            A   653    	LD	BC,1024
040246 DD27F0              A   654    	LD	HL,(IX+%FFFFFFF0)
040249 09                  A   655    	ADD	HL,BC
04024A DD2FF0              A   656    	LD	(IX+%FFFFFFF0),HL
                           A   657    ;  116				addressfrom += PAGESIZE;
                           A   658    .LINE 116
                           A   659    
04024D DD27F6              A   660    	LD	HL,(IX+%FFFFFFF6)
040250 09                  A   661    	ADD	HL,BC
040251 DD2FF6              A   662    	LD	(IX+%FFFFFFF6),HL
040254 DD07FD              A   663    	LD	BC,(IX+%FFFFFFFD)
040257 03                  A   664    	INC	BC
040258 DD0FFD              A   665    	LD	(IX+%FFFFFFFD),BC
                           A   666    ;  117				//timer = 0;
                           A   667    ;  118				//while(timer++ < 32768);
                           A   668    ;  119				//waitZDI(FEEDBACK_PAGEWRIT
                           A   669    ;  120			}
04025B                     A   670    L_25:
                           A   671    .LINE 120
                           A   672    
04025B DD07F3              A   673    	LD	BC,(IX+%FFFFFFF3)
04025E DD27FD              A   674    	LD	HL,(IX+%FFFFFFFD)
040261 B7                  A   675    	OR	A,A
040262 ED42                A   676    	SBC	HL,BC
040264 38 A5               A   677    	JR	C,L_23
                           A   678    ;  121			lockFlashKeyRegister();	// lock
                           A   679    .LINE 121
                           A   680    
040266 CD 11 01 04         A   681    	CALL	_lockFlashKeyRegister
                           A   682    ;  122			waitZDI(1, counter);
                           A   683    .LINE 122
                           A   684    
04026A DD07FD              A   685    	LD	BC,(IX+%FFFFFFFD)
04026D C5                  A   686    	PUSH	BC
04026E 01010000            A   687    	LD	BC,1
040272 C5                  A   688    	PUSH	BC
040273 CD 45 01 04         A   689    	CALL	_waitZDI
040277 C1                  A   690    	POP	BC
040278 C1                  A   691    	POP	BC
                           A   692    ;  123		}
                           A   693    ;  124		else waitZDI(0, 0);
                           A   694    .LINE 124
                           A   695    
                           A   696    ;  125		while(1);
040279                     A   697    L_30:
                           A   698    .LINE 125
                           A   699    
040279 18 FE               A   700    	JR	L_30
                           A   701    ;  126		return 0;
                           A   702    ;  127	}
                           A   703    .LINE 127
                           A   704    
04027B DDF9                A   705    	LD	SP,IX
04027D DDE1                A   706    	POP	IX
04027F C9                  A   707    	RET	
                           A   708    
                           A   709    
                           A   710    ;**************************** _main ***********
                           A   711    ;Name                         Addr/Register   S
                           A   712    ;_lockFlashKeyRegister               IMPORT  --
                           A   713    ;_fastmemcpy                         IMPORT  --
                           A   714    ;_waitZDI                            IMPORT  --
                           A   715    ;lastpagebytes                        IX-25    
                           A   716    ;size                                 IX-22    
                           A   717    ;G_0                                  IX-19    
                           A   718    ;addressto                            IX-16    
                           A   719    ;pagemax                              IX-13    
                           A   720    ;addressfrom                          IX-10    
                           A   721    ;ptr                                   IX-7    
                           A   722    ;value                                 IX-4    
                           A   723    ;counter                               IX-3    
                           A   724    ;argv                                  IX+9    
                           A   725    ;argc                                  IX+6    
                           A   726    
                           A   727    
                           A   728    ; Stack Frame Size: 37 (bytes)
                           A   729    ;       Spill Code: 0 (instruction)
                           A   730    
                           A   731    
                           A   732    .ENDFUNC "main",127,"_main"
                           A   733    	XREF _fastmemcpy:ROM
                           A   734    	XREF _lockFlashKeyRegister:ROM
                           A   735    	XREF _waitZDI:ROM
                           A   736    	XREF __iand:ROM
                           A   737    	XREF __icmpzero:ROM
                           A   738    	XDEF _main
                           A   739    	XDEF _fs
                           A   740    	END


Errors: 0
Warnings: 0
Lines Assembled: 741
