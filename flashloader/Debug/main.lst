Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED21-Oct-23     18:18:30     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
0447A2                     A   268    _fs:
0447A2                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	#include <stdint.h>
                           A   282    ;    6	#include "agontimer.h"
                           A   283    ;    7	#include "protocol.h"
                           A   284    ;    8	
                           A   285    ;    9	#define PAGESIZE	1024
                           A   286    ;   10	#define FLASHPAGES	128
                           A   287    ;   11	#define FLASHSTART	0x0
                           A   288    ;   12	#define BAUDRATE	500000
                           A   289    ;   13	
                           A   290    ;   14	#define MOSFILENAME	"MOS.bin"
                           A   291    ;   15	#define LOADADDRESS	0x50000
                           A   292    ;   16	
                           A   293    ;   17	extern void init_UART0(void);
                           A   294    ;   18	
                           A   295    ;   19	extern void enableFlashKeyRegister(void
                           A   296    ;   20	extern void lockFlashKeyRegister(void);
                           A   297    ;   21	extern void fastmemcpy(UINT24 destinati
                           A   298    ;   22	extern void reset(void);
                           A   299    ;   23	
                           A   300    ;   24	FATFS 	fs;
                           A   301    	SEGMENT CODE
                           A   302    ;   25	
                           A   303    ;   26	int main(int argc, char * argv[]) {
040145                     A   304    _main:
                           A   305    .DEFINE "_main"
                           A   306    
                           A   307    .VALUE _main
                           A   308    
                           A   309    .CLASS 2
                           A   310    
                           A   311    .TYPE 68
                           A   312    
                           A   313    .ENDEF
                           A   314    
                           A   315    .BEGFUNC "main",26,"_main"
                           A   316    
                           A   317    .LINE 26
                           A   318    
                           A   319    .DEFINE "argc"
                           A   320    
                           A   321    .CLASS 65
                           A   322    
                           A   323    .VALUE 6
                           A   324    
                           A   325    .TYPE 4
                           A   326    
                           A   327    .ENDEF
                           A   328    
                           A   329    .DEFINE "argv"
                           A   330    
                           A   331    .CLASS 65
                           A   332    
                           A   333    .VALUE 9
                           A   334    
                           A   335    .TYPE 290
                           A   336    
                           A   337    .ENDEF
                           A   338    
                           A   339    .DEFINE "counter"
                           A   340    
                           A   341    .CLASS 65
                           A   342    
                           A   343    .VALUE -3
                           A   344    
                           A   345    .TYPE 14
                           A   346    
                           A   347    .ENDEF
                           A   348    
                           A   349    .DEFINE "size"
                           A   350    
                           A   351    .CLASS 65
                           A   352    
                           A   353    .VALUE -6
                           A   354    
                           A   355    .TYPE 14
                           A   356    
                           A   357    .ENDEF
                           A   358    
                           A   359    .DEFINE "pagemax"
                           A   360    
                           A   361    .CLASS 65
                           A   362    
                           A   363    .VALUE -9
                           A   364    
                           A   365    .TYPE 14
                           A   366    
                           A   367    .ENDEF
                           A   368    
                           A   369    .DEFINE "addressto"
                           A   370    
                           A   371    .CLASS 65
                           A   372    
                           A   373    .VALUE -12
                           A   374    
                           A   375    .TYPE 14
                           A   376    
                           A   377    .ENDEF
                           A   378    
                           A   379    .DEFINE "addressfrom"
                           A   380    
                           A   381    .CLASS 65
                           A   382    
                           A   383    .VALUE -15
                           A   384    
                           A   385    .TYPE 14
                           A   386    
                           A   387    .ENDEF
                           A   388    
                           A   389    .DEFINE "value"
                           A   390    
                           A   391    .CLASS 65
                           A   392    
                           A   393    .VALUE -16
                           A   394    
                           A   395    .TYPE 12
                           A   396    
                           A   397    .ENDEF
                           A   398    
                           A   399    .DEFINE "lastpagebytes"
                           A   400    
                           A   401    .CLASS 65
                           A   402    
                           A   403    .VALUE -19
                           A   404    
                           A   405    .TYPE 14
                           A   406    
                           A   407    .ENDEF
                           A   408    
                           A   409    .DEFINE "fr"
                           A   410    
                           A   411    .CLASS 65
                           A   412    
                           A   413    .VALUE -22
                           A   414    
                           A   415    .TYPE 4
                           A   416    
                           A   417    .ENDEF
                           A   418    
                           A   419    .DEFINE "br"
                           A   420    
                           A   421    .CLASS 65
                           A   422    
                           A   423    .VALUE -28
                           A   424    
                           A   425    .TYPE 14
                           A   426    
                           A   427    .ENDEF
                           A   428    
                           A   429    .DEFINE "fil"
                           A   430    
                           A   431    .CLASS 65
                           A   432    
                           A   433    .VALUE -57
                           A   434    
                           A   435    .TAG "NONAME2"
                           A   436    
                           A   437    .TYPE 8
                           A   438    
                           A   439    .ENDEF
                           A   440    
040145 DDE5                A   441    	PUSH	IX
040147 DD210000 00         A   442    	LD	IX,0
04014C DD39                A   443    	ADD	IX,SP
04014E ED22C7              A   444    	LEA	HL,IX+%FFFFFFC7
040151 F9                  A   445    	LD	SP,HL
                           A   446    ;   27		FRESULT	fr;
                           A   447    ;   28		FIL	   	fil;
                           A   448    ;   29		UINT24  br;	
                           A   449    ;   30		void * 	dest;
                           A   450    ;   31		UINT24 size;
                           A   451    ;   32		
                           A   452    ;   33		UINT24	counter,pagemax, lastpageby
                           A   453    ;   34		UINT24 addressto,addressfrom;
                           A   454    ;   35		UINT8	value;
                           A   455    ;   36		UINT24 timer;
                           A   456    ;   37		init_spi();
                           A   457    .LINE 37
                           A   458    
040152 CD DA 3E 04         A   459    	CALL	_init_spi
                           A   460    ;   38		init_UART0();
                           A   461    .LINE 38
                           A   462    
040156 CD 98 40 04         A   463    	CALL	_init_UART0
                           A   464    ;   39	
                           A   465    ;   40		f_mount(&fs, "", 1);
                           A   466    .LINE 40
                           A   467    
04015A 01010000            A   468    	LD	BC,1
04015E C5                  A   469    	PUSH	BC
04015F 01 80 47 04         A   470    	LD	BC,L__0
040163 C5                  A   471    	PUSH	BC
040164 01 A2 47 04         A   472    	LD	BC,_fs
040168 C5                  A   473    	PUSH	BC
040169 CD 44 32 04         A   474    	CALL	_f_mount
04016D C1                  A   475    	POP	BC
04016E C1                  A   476    	POP	BC
04016F C1                  A   477    	POP	BC
                           A   478    ;   41		sendStatus('S', 1, 0); // startup c
                           A   479    .LINE 41
                           A   480    
040170 01000000            A   481    	LD	BC,0
040174 C5                  A   482    	PUSH	BC
040175 C5                  A   483    	PUSH	BC
040176 01010000            A   484    	LD	BC,1
04017A C5                  A   485    	PUSH	BC
04017B 01530000            A   486    	LD	BC,83
04017F C5                  A   487    	PUSH	BC
040180 CD 82 41 04         A   488    	CALL	_sendStatus
040184 C1                  A   489    	POP	BC
040185 C1                  A   490    	POP	BC
040186 C1                  A   491    	POP	BC
040187 C1                  A   492    	POP	BC
                           A   493    ;   42		addressto = FLASHSTART;
                           A   494    .LINE 42
                           A   495    
040188 01000000            A   496    	LD	BC,0
04018C DD0FF4              A   497    	LD	(IX+%FFFFFFF4),BC
                           A   498    ;   43		addressfrom = LOADADDRESS;
                           A   499    .LINE 43
                           A   500    
04018F 01000005            A   501    	LD	BC,327680
040193 DD0FF1              A   502    	LD	(IX+%FFFFFFF1),BC
                           A   503    ;   44	
                           A   504    ;   45		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   505    .LINE 45
                           A   506    
040196 01010000            A   507    	LD	BC,1
04019A C5                  A   508    	PUSH	BC
04019B 01 81 47 04         A   509    	LD	BC,L__1
04019F C5                  A   510    	PUSH	BC
0401A0 ED65C7              A   511    	PEA	IX+%FFFFFFC7
0401A3 CD D0 32 04         A   512    	CALL	_f_open
0401A7 C1                  A   513    	POP	BC
0401A8 C1                  A   514    	POP	BC
0401A9 C1                  A   515    	POP	BC
0401AA DD2FEA              A   516    	LD	(IX+%FFFFFFEA),HL
                           A   517    ;   46		if(fr == FR_OK) {
                           A   518    .LINE 46
                           A   519    
0401AD CD 32 45 04         A   520    	CALL	__icmpzero
0401B1 C2 34 03 04         A   521    	JR	NZ,L_19
                           A   522    ;   47			size = f_size(&fil);
                           A   523    .LINE 47
                           A   524    
0401B5 DD07D2              A   525    	LD	BC,(IX+%FFFFFFD2)
0401B8 DD0FFA              A   526    	LD	(IX+%FFFFFFFA),BC
                           A   527    ;   48			sendStatus('F', 1, size); // fi
                           A   528    .LINE 48
                           A   529    
0401BB AF                  A   530    	XOR	A,A
0401BC C5D1                A   531    	LD	DE,BC
0401BE 4F                  A   532    	LD	C,A
0401BF 0600                A   533    	LD	B,%0
0401C1 C5                  A   534    	PUSH	BC
0401C2 D5                  A   535    	PUSH	DE
0401C3 01010000            A   536    	LD	BC,1
0401C7 C5                  A   537    	PUSH	BC
0401C8 01460000            A   538    	LD	BC,70
0401CC C5                  A   539    	PUSH	BC
0401CD CD 82 41 04         A   540    	CALL	_sendStatus
0401D1 C1                  A   541    	POP	BC
0401D2 C1                  A   542    	POP	BC
0401D3 C1                  A   543    	POP	BC
0401D4 C1                  A   544    	POP	BC
                           A   545    ;   49	
                           A   546    ;   50			fr = f_read(&fil, (void *)LOADA
                           A   547    .LINE 50
                           A   548    
0401D5 ED65E4              A   549    	PEA	IX+%FFFFFFE4
0401D8 DD07FA              A   550    	LD	BC,(IX+%FFFFFFFA)
0401DB C5                  A   551    	PUSH	BC
0401DC 01000005            A   552    	LD	BC,327680
0401E0 C5                  A   553    	PUSH	BC
0401E1 ED65C7              A   554    	PEA	IX+%FFFFFFC7
0401E4 CD 20 34 04         A   555    	CALL	_f_read
0401E8 C1                  A   556    	POP	BC
0401E9 C1                  A   557    	POP	BC
0401EA C1                  A   558    	POP	BC
0401EB C1                  A   559    	POP	BC
0401EC DD2FEA              A   560    	LD	(IX+%FFFFFFEA),HL
                           A   561    ;   51			sendStatus('M', 1, br); // file
                           A   562    .LINE 51
                           A   563    
0401EF DD07E4              A   564    	LD	BC,(IX+%FFFFFFE4)
0401F2 AF                  A   565    	XOR	A,A
0401F3 C5D1                A   566    	LD	DE,BC
0401F5 4F                  A   567    	LD	C,A
0401F6 0600                A   568    	LD	B,%0
0401F8 C5                  A   569    	PUSH	BC
0401F9 D5                  A   570    	PUSH	DE
0401FA 01010000            A   571    	LD	BC,1
0401FE C5                  A   572    	PUSH	BC
0401FF 014D0000            A   573    	LD	BC,77
040203 C5                  A   574    	PUSH	BC
040204 CD 82 41 04         A   575    	CALL	_sendStatus
040208 C1                  A   576    	POP	BC
040209 C1                  A   577    	POP	BC
04020A C1                  A   578    	POP	BC
04020B C1                  A   579    	POP	BC
                           A   580    ;   52	
                           A   581    ;   53			f_close(&fil);
                           A   582    .LINE 53
                           A   583    
04020C ED65C7              A   584    	PEA	IX+%FFFFFFC7
04020F CD 5B 37 04         A   585    	CALL	_f_close
040213 C1                  A   586    	POP	BC
                           A   587    ;   54			// Wait for user to acknowledge
                           A   588    ;   55			getch();
                           A   589    .LINE 55
                           A   590    
040214 CD 7D 42 04         A   591    	CALL	_getch
                           A   592    ;   56			
                           A   593    ;   57			// Unprotect and erase flash
                           A   594    ;   58			enableFlashKeyRegister();	// 
                           A   595    .LINE 58
                           A   596    
040218 CD F9 00 04         A   597    	CALL	_enableFlashKeyRegister
                           A   598    ;   59			FLASH_PROT = 0;				// 
                           A   599    .LINE 59
                           A   600    
04021C AF                  A   601    	XOR	A,A
04021D ED39FA              A   602    	OUT0	(250),A
                           A   603    ;   60			enableFlashKeyRegister();	// 
                           A   604    .LINE 60
                           A   605    
040220 CD F9 00 04         A   606    	CALL	_enableFlashKeyRegister
                           A   607    ;   61			FLASH_FDIV = 0x5F;			// 
                           A   608    .LINE 61
                           A   609    
040224 3E5F                A   610    	LD	A,%5F
040226 ED39F9              A   611    	OUT0	(249),A
                           A   612    ;   62	
                           A   613    ;   63			// Erase all flash pages
                           A   614    ;   64			for(counter = 0; counter < FLAS
                           A   615    .LINE 64
                           A   616    
040229 01000000            A   617    	LD	BC,0
04022D DD0FFD              A   618    	LD	(IX+%FFFFFFFD),BC
040230 18 1C               A   619    	JR	L_5
040232                     A   620    L_3:
                           A   621    ;   65			{
                           A   622    ;   66				FLASH_PAGE = counter;
                           A   623    .LINE 66
                           A   624    
040232 DD7EFD              A   625    	LD	A,(IX+%FFFFFFFD)
040235 ED39FC              A   626    	OUT0	(252),A
                           A   627    ;   67				FLASH_PGCTL = 0x02;			
                           A   628    .LINE 67
                           A   629    
040238 3E02                A   630    	LD	A,%2
04023A ED39FF              A   631    	OUT0	(255),A
                           A   632    ;   68	
                           A   633    ;   69				do
04023D                     A   634    L_1:
                           A   635    .LINE 69
                           A   636    
                           A   637    ;   70				{
                           A   638    ;   71					value = FLASH_PGCTL;
                           A   639    .LINE 71
                           A   640    
04023D ED38FF              A   641    	IN0	A,(255)
040240 DD77F0              A   642    	LD	(IX+%FFFFFFF0),A
                           A   643    ;   72				}
                           A   644    ;   73				while(value & 0x02);// wait
                           A   645    .LINE 73
                           A   646    
040243 E602                A   647    	AND	A,%2
040245 20 F6               A   648    	JR	NZ,L_1
040247 DD07FD              A   649    	LD	BC,(IX+%FFFFFFFD)
04024A 03                  A   650    	INC	BC
04024B DD0FFD              A   651    	LD	(IX+%FFFFFFFD),BC
                           A   652    ;   74			}
04024E                     A   653    L_5:
                           A   654    .LINE 74
                           A   655    
04024E 01800000            A   656    	LD	BC,128
040252 DD27FD              A   657    	LD	HL,(IX+%FFFFFFFD)
040255 B7                  A   658    	OR	A,A
040256 ED42                A   659    	SBC	HL,BC
040258 38 D8               A   660    	JR	C,L_3
                           A   661    ;   75	
                           A   662    ;   76			sendStatus('E', 1, counter); //
                           A   663    .LINE 76
                           A   664    
04025A DD07FD              A   665    	LD	BC,(IX+%FFFFFFFD)
04025D AF                  A   666    	XOR	A,A
04025E C5D1                A   667    	LD	DE,BC
040260 4F                  A   668    	LD	C,A
040261 0600                A   669    	LD	B,%0
040263 C5                  A   670    	PUSH	BC
040264 D5                  A   671    	PUSH	DE
040265 01010000            A   672    	LD	BC,1
040269 C5                  A   673    	PUSH	BC
04026A 01450000            A   674    	LD	BC,69
04026E C5                  A   675    	PUSH	BC
04026F CD 82 41 04         A   676    	CALL	_sendStatus
040273 C1                  A   677    	POP	BC
040274 C1                  A   678    	POP	BC
040275 C1                  A   679    	POP	BC
040276 C1                  A   680    	POP	BC
                           A   681    ;   77	
                           A   682    ;   78			// determine number of pages to
                           A   683    ;   79			pagemax = size/PAGESIZE;
                           A   684    .LINE 79
                           A   685    
040277 DD27FA              A   686    	LD	HL,(IX+%FFFFFFFA)
04027A 3E0A                A   687    	LD	A,%A
04027C CD A9 45 04         A   688    	CALL	__ishru_b
040280 DD2FF7              A   689    	LD	(IX+%FFFFFFF7),HL
                           A   690    ;   80			if(size%PAGESIZE) // last page 
                           A   691    .LINE 80
                           A   692    
040283 01FF0300            A   693    	LD	BC,1023
040287 DD27FA              A   694    	LD	HL,(IX+%FFFFFFFA)
04028A CD 41 46 04         A   695    	CALL	__iand
04028E DD2FE7              A   696    	LD	(IX+%FFFFFFE7),HL
040291 CD 32 45 04         A   697    	CALL	__icmpzero
040295 28 0F               A   698    	JR	Z,L_8
                           A   699    ;   81			{
                           A   700    ;   82				pagemax += 1;
                           A   701    .LINE 82
                           A   702    
040297 DD07F7              A   703    	LD	BC,(IX+%FFFFFFF7)
04029A 03                  A   704    	INC	BC
04029B DD0FF7              A   705    	LD	(IX+%FFFFFFF7),BC
                           A   706    ;   83				lastpagebytes = size%PAGESI
                           A   707    .LINE 83
                           A   708    
04029E DD07E7              A   709    	LD	BC,(IX+%FFFFFFE7)
0402A1 DD0FED              A   710    	LD	(IX+%FFFFFFED),BC
                           A   711    ;   84			}
                           A   712    ;   85			else lastpagebytes = PAGESIZE; 
                           A   713    .LINE 85
                           A   714    
0402A4 18 07               A   715    	JR	L_16
0402A6                     A   716    L_8:
0402A6 01000400            A   717    	LD	BC,1024
0402AA DD0FED              A   718    	LD	(IX+%FFFFFFED),BC
0402AD                     A   719    L_16:
                           A   720    ;   86	
                           A   721    ;   87			// write out each page to flash
                           A   722    ;   88			for(counter = 0; counter < page
                           A   723    .LINE 88
                           A   724    
0402AD 01000000            A   725    	LD	BC,0
0402B1 DD0FFD              A   726    	LD	(IX+%FFFFFFFD),BC
0402B4 18 50               A   727    	JR	L_15
0402B6                     A   728    L_13:
                           A   729    ;   89			{
                           A   730    ;   90				if(counter == (pagemax - 1)
                           A   731    .LINE 90
                           A   732    
0402B6 DD31F7              A   733    	LD	IY,(IX+%FFFFFFF7)
0402B9 ED23FF              A   734    	LEA	HL,IY+%FFFFFFFF
0402BC DD07FD              A   735    	LD	BC,(IX+%FFFFFFFD)
0402BF B7                  A   736    	OR	A,A
0402C0 ED42                A   737    	SBC	HL,BC
0402C2 20 15               A   738    	JR	NZ,L_11
                           A   739    ;   91					fastmemcpy(addressto,ad
                           A   740    .LINE 91
                           A   741    
0402C4 DD07ED              A   742    	LD	BC,(IX+%FFFFFFED)
0402C7 C5                  A   743    	PUSH	BC
0402C8 DD07F1              A   744    	LD	BC,(IX+%FFFFFFF1)
0402CB C5                  A   745    	PUSH	BC
0402CC DD07F4              A   746    	LD	BC,(IX+%FFFFFFF4)
0402CF C5                  A   747    	PUSH	BC
0402D0 CD 26 01 04         A   748    	CALL	_fastmemcpy
0402D4 C1                  A   749    	POP	BC
0402D5 C1                  A   750    	POP	BC
0402D6 C1                  A   751    	POP	BC
                           A   752    ;   92				else 
                           A   753    .LINE 92
                           A   754    
0402D7 18 14               A   755    	JR	L_12
0402D9                     A   756    L_11:
                           A   757    ;   93					fastmemcpy(addressto,ad
                           A   758    .LINE 93
                           A   759    
0402D9 01000400            A   760    	LD	BC,1024
0402DD C5                  A   761    	PUSH	BC
0402DE DD07F1              A   762    	LD	BC,(IX+%FFFFFFF1)
0402E1 C5                  A   763    	PUSH	BC
0402E2 DD07F4              A   764    	LD	BC,(IX+%FFFFFFF4)
0402E5 C5                  A   765    	PUSH	BC
0402E6 CD 26 01 04         A   766    	CALL	_fastmemcpy
0402EA C1                  A   767    	POP	BC
0402EB C1                  A   768    	POP	BC
0402EC C1                  A   769    	POP	BC
0402ED                     A   770    L_12:
                           A   771    ;   94			
                           A   772    ;   95				addressto += PAGESIZE;
                           A   773    .LINE 95
                           A   774    
0402ED 01000400            A   775    	LD	BC,1024
0402F1 DD27F4              A   776    	LD	HL,(IX+%FFFFFFF4)
0402F4 09                  A   777    	ADD	HL,BC
0402F5 DD2FF4              A   778    	LD	(IX+%FFFFFFF4),HL
                           A   779    ;   96				addressfrom += PAGESIZE;
                           A   780    .LINE 96
                           A   781    
0402F8 DD27F1              A   782    	LD	HL,(IX+%FFFFFFF1)
0402FB 09                  A   783    	ADD	HL,BC
0402FC DD2FF1              A   784    	LD	(IX+%FFFFFFF1),HL
0402FF DD07FD              A   785    	LD	BC,(IX+%FFFFFFFD)
040302 03                  A   786    	INC	BC
040303 DD0FFD              A   787    	LD	(IX+%FFFFFFFD),BC
                           A   788    ;   97				//timer = 0;
                           A   789    ;   98				//while(timer++ < 32768);
                           A   790    ;   99				////waitZDI(FEEDBACK_PAGEWR
                           A   791    ;  100			}
040306                     A   792    L_15:
                           A   793    .LINE 100
                           A   794    
040306 DD07F7              A   795    	LD	BC,(IX+%FFFFFFF7)
040309 DD27FD              A   796    	LD	HL,(IX+%FFFFFFFD)
04030C B7                  A   797    	OR	A,A
04030D ED42                A   798    	SBC	HL,BC
04030F 38 A5               A   799    	JR	C,L_13
                           A   800    ;  101			lockFlashKeyRegister();	// lock
                           A   801    .LINE 101
                           A   802    
040311 CD 11 01 04         A   803    	CALL	_lockFlashKeyRegister
                           A   804    ;  102			sendStatus('P', 1, counter); //
                           A   805    .LINE 102
                           A   806    
040315 DD07FD              A   807    	LD	BC,(IX+%FFFFFFFD)
040318 AF                  A   808    	XOR	A,A
040319 C5D1                A   809    	LD	DE,BC
04031B 4F                  A   810    	LD	C,A
04031C 0600                A   811    	LD	B,%0
04031E C5                  A   812    	PUSH	BC
04031F D5                  A   813    	PUSH	DE
040320 01010000            A   814    	LD	BC,1
040324 C5                  A   815    	PUSH	BC
040325 01500000            A   816    	LD	BC,80
040329 C5                  A   817    	PUSH	BC
04032A CD 82 41 04         A   818    	CALL	_sendStatus
04032E C1                  A   819    	POP	BC
04032F C1                  A   820    	POP	BC
040330 C1                  A   821    	POP	BC
040331 C1                  A   822    	POP	BC
                           A   823    ;  103		}
                           A   824    ;  104		else sendStatus('F', 0, 0); // file
                           A   825    .LINE 104
                           A   826    
040332 18 14               A   827    	JR	L_21
040334                     A   828    L_19:
040334 01000000            A   829    	LD	BC,0
040338 C5                  A   830    	PUSH	BC
040339 C5                  A   831    	PUSH	BC
04033A C5                  A   832    	PUSH	BC
04033B 01460000            A   833    	LD	BC,70
04033F C5                  A   834    	PUSH	BC
040340 CD 82 41 04         A   835    	CALL	_sendStatus
040344 C1                  A   836    	POP	BC
040345 C1                  A   837    	POP	BC
040346 C1                  A   838    	POP	BC
040347 C1                  A   839    	POP	BC
                           A   840    ;  105		while(1);
040348                     A   841    L_21:
                           A   842    .LINE 105
                           A   843    
040348 18 FE               A   844    	JR	L_21
                           A   845    ;  106		return 0;
                           A   846    ;  107	}
                           A   847    .LINE 107
                           A   848    
04034A DDF9                A   849    	LD	SP,IX
04034C DDE1                A   850    	POP	IX
04034E C9                  A   851    	RET	
                           A   852    
                           A   853    
                           A   854    ;**************************** _main ***********
                           A   855    ;Name                         Addr/Register   S
                           A   856    ;_lockFlashKeyRegister               IMPORT  --
                           A   857    ;_fastmemcpy                         IMPORT  --
                           A   858    ;_enableFlashKeyRegister             IMPORT  --
                           A   859    ;_getch                              IMPORT  --
                           A   860    ;_f_close                            IMPORT  --
                           A   861    ;_f_read                             IMPORT  --
                           A   862    ;_f_open                             IMPORT  --
                           A   863    ;_sendStatus                         IMPORT  --
                           A   864    ;_fs                                 STATIC    
                           A   865    ;_f_mount                            IMPORT  --
                           A   866    ;_init_UART0                         IMPORT  --
                           A   867    ;_init_spi                           IMPORT  --
                           A   868    ;fil                                  IX-57    
                           A   869    ;br                                   IX-28    
                           A   870    ;G_0                                  IX-25    
                           A   871    ;fr                                   IX-22    
                           A   872    ;lastpagebytes                        IX-19    
                           A   873    ;value                                IX-16    
                           A   874    ;addressfrom                          IX-15    
                           A   875    ;addressto                            IX-12    
                           A   876    ;pagemax                               IX-9    
                           A   877    ;size                                  IX-6    
                           A   878    ;counter                               IX-3    
                           A   879    ;argv                                  IX+9    
                           A   880    ;argc                                  IX+6    
                           A   881    
                           A   882    
                           A   883    ; Stack Frame Size: 69 (bytes)
                           A   884    ;       Spill Code: 0 (instruction)
                           A   885    
                           A   886    
                           A   887    .ENDFUNC "main",107,"_main"
                           A   888    	SEGMENT STRSECT
044780                     A   889    L__0:
044780 00                  A   890    	DB	0
044781                     A   891    L__1:
044781 4D4F532E 62696E     A   892    	DB	"MOS.bin"
044788 00                  A   893    	DB	0
                           A   894    	XREF _fastmemcpy:ROM
                           A   895    	XREF _lockFlashKeyRegister:ROM
                           A   896    	XREF _enableFlashKeyRegister:ROM
                           A   897    	XREF _init_UART0:ROM
                           A   898    	XREF _getch:ROM
                           A   899    	XREF _sendStatus:ROM
                           A   900    	XREF _init_spi:ROM
                           A   901    	XREF _f_mount:ROM
                           A   902    	XREF _f_read:ROM
                           A   903    	XREF _f_close:ROM
                           A   904    	XREF _f_open:ROM
                           A   905    	XREF __iand:ROM
                           A   906    	XREF __icmpzero:ROM
                           A   907    	XREF __ishru_b:ROM
                           A   908    	XDEF _main
                           A   909    	XDEF _fs
                           A   910    	END


Errors: 0
Warnings: 0
Lines Assembled: 911
