Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED21-Oct-23     13:35:29     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
0444A8                     A   268    _fs:
0444A8                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	
                           A   282    ;    6	#define PAGESIZE	1024
                           A   283    ;    7	#define FLASHPAGES	128
                           A   284    ;    8	#define FLASHSTART	0x0
                           A   285    ;    9	
                           A   286    ;   10	#define MOSFILENAME	"MOS.bin"
                           A   287    ;   11	#define LOADADDRESS	0x50000
                           A   288    ;   12	#define DONE		0x70000
                           A   289    ;   13	#define	VALUESTART	0x80000
                           A   290    ;   14	
                           A   291    ;   15	extern void waitZDI(UINT8 status, UINT2
                           A   292    ;   16	extern void enableFlashKeyRegister(void
                           A   293    ;   17	extern void lockFlashKeyRegister(void);
                           A   294    ;   18	extern void fastmemcpy(UINT24 destinati
                           A   295    ;   19	extern void reset(void);
                           A   296    ;   20	
                           A   297    ;   21	FATFS 	fs;
                           A   298    	SEGMENT CODE
                           A   299    ;   22	
                           A   300    ;   23	int main(int argc, char * argv[]) {
04016E                     A   301    _main:
                           A   302    .DEFINE "_main"
                           A   303    
                           A   304    .VALUE _main
                           A   305    
                           A   306    .CLASS 2
                           A   307    
                           A   308    .TYPE 68
                           A   309    
                           A   310    .ENDEF
                           A   311    
                           A   312    .BEGFUNC "main",23,"_main"
                           A   313    
                           A   314    .LINE 23
                           A   315    
                           A   316    .DEFINE "argc"
                           A   317    
                           A   318    .CLASS 65
                           A   319    
                           A   320    .VALUE 6
                           A   321    
                           A   322    .TYPE 4
                           A   323    
                           A   324    .ENDEF
                           A   325    
                           A   326    .DEFINE "argv"
                           A   327    
                           A   328    .CLASS 65
                           A   329    
                           A   330    .VALUE 9
                           A   331    
                           A   332    .TYPE 290
                           A   333    
                           A   334    .ENDEF
                           A   335    
                           A   336    .DEFINE "counter"
                           A   337    
                           A   338    .CLASS 65
                           A   339    
                           A   340    .VALUE -3
                           A   341    
                           A   342    .TYPE 14
                           A   343    
                           A   344    .ENDEF
                           A   345    
                           A   346    .DEFINE "value"
                           A   347    
                           A   348    .CLASS 65
                           A   349    
                           A   350    .VALUE -4
                           A   351    
                           A   352    .TYPE 12
                           A   353    
                           A   354    .ENDEF
                           A   355    
                           A   356    .DEFINE "head"
                           A   357    
                           A   358    .CLASS 65
                           A   359    
                           A   360    .VALUE -5
                           A   361    
                           A   362    .TYPE 12
                           A   363    
                           A   364    .ENDEF
                           A   365    
                           A   366    .DEFINE "ptr"
                           A   367    
                           A   368    .CLASS 65
                           A   369    
                           A   370    .VALUE -8
                           A   371    
                           A   372    .TYPE 44
                           A   373    
                           A   374    .ENDEF
                           A   375    
                           A   376    .DEFINE "done"
                           A   377    
                           A   378    .CLASS 65
                           A   379    
                           A   380    .VALUE -9
                           A   381    
                           A   382    .TYPE 12
                           A   383    
                           A   384    .ENDEF
                           A   385    
                           A   386    .DEFINE "addressto"
                           A   387    
                           A   388    .CLASS 65
                           A   389    
                           A   390    .VALUE -12
                           A   391    
                           A   392    .TYPE 14
                           A   393    
                           A   394    .ENDEF
                           A   395    
                           A   396    .DEFINE "addressfrom"
                           A   397    
                           A   398    .CLASS 65
                           A   399    
                           A   400    .VALUE -15
                           A   401    
                           A   402    .TYPE 14
                           A   403    
                           A   404    .ENDEF
                           A   405    
                           A   406    .DEFINE "pagemax"
                           A   407    
                           A   408    .CLASS 65
                           A   409    
                           A   410    .VALUE -18
                           A   411    
                           A   412    .TYPE 14
                           A   413    
                           A   414    .ENDEF
                           A   415    
                           A   416    .DEFINE "size"
                           A   417    
                           A   418    .CLASS 65
                           A   419    
                           A   420    .VALUE -24
                           A   421    
                           A   422    .TYPE 14
                           A   423    
                           A   424    .ENDEF
                           A   425    
                           A   426    .DEFINE "lastpagebytes"
                           A   427    
                           A   428    .CLASS 65
                           A   429    
                           A   430    .VALUE -27
                           A   431    
                           A   432    .TYPE 14
                           A   433    
                           A   434    .ENDEF
                           A   435    
04016E DDE5                A   436    	PUSH	IX
040170 DD210000 00         A   437    	LD	IX,0
040175 DD39                A   438    	ADD	IX,SP
040177 ED22E5              A   439    	LEA	HL,IX+%FFFFFFE5
04017A F9                  A   440    	LD	SP,HL
                           A   441    ;   24		FRESULT	fr;
                           A   442    ;   25		FIL	   	fil;
                           A   443    ;   26		UINT24  br;	
                           A   444    ;   27		void * 	dest;
                           A   445    ;   28		UINT24 size;
                           A   446    ;   29		
                           A   447    ;   30		UINT24	counter,pagemax, lastpageby
                           A   448    ;   31		UINT24 addressto,addressfrom;
                           A   449    ;   32		UINT8	value;
                           A   450    ;   33		UINT24 timer;
                           A   451    ;   34		UINT8 head;
                           A   452    ;   35		UINT8* ptr;
                           A   453    ;   36		UINT8 done;
                           A   454    ;   37	
                           A   455    ;   38		*((UINT8*)DONE) = 0;
                           A   456    .LINE 38
                           A   457    
04017B AF                  A   458    	XOR	A,A
04017C 32000007            A   459    	LD	(458752),A
                           A   460    ;   39		head = 0;
                           A   461    .LINE 39
                           A   462    
040180 DD36FB00            A   463    	LD	(IX+%FFFFFFFB),%0
                           A   464    ;   40		done = 0;
                           A   465    ;   41		while(1) {	
040184                     A   466    L_10:
                           A   467    .LINE 41
                           A   468    
                           A   469    ;   42			ptr = (UINT8*)VALUESTART;	
                           A   470    .LINE 42
                           A   471    
040184 01000008            A   472    	LD	BC,524288
040188 DD0FF8              A   473    	LD	(IX+%FFFFFFF8),BC
                           A   474    ;   43			for(value = 0; value < 2; value
                           A   475    .LINE 43
                           A   476    
04018B DD36FC00            A   477    	LD	(IX+%FFFFFFFC),%0
04018F 18 14               A   478    	JR	L_4
040191                     A   479    L_2:
                           A   480    ;   44				*ptr = value + head;
                           A   481    .LINE 44
                           A   482    
040191 DD27F8              A   483    	LD	HL,(IX+%FFFFFFF8)
040194 DD7EFC              A   484    	LD	A,(IX+%FFFFFFFC)
040197 DD86FB              A   485    	ADD	A,(IX+%FFFFFFFB)
04019A 77                  A   486    	LD	(HL),A
                           A   487    ;   45				ptr++;
                           A   488    .LINE 45
                           A   489    
04019B DD07F8              A   490    	LD	BC,(IX+%FFFFFFF8)
04019E 03                  A   491    	INC	BC
04019F DD0FF8              A   492    	LD	(IX+%FFFFFFF8),BC
0401A2 DD34FC              A   493    	INC	(IX+%FFFFFFFC)
                           A   494    ;   46			}
0401A5                     A   495    L_4:
                           A   496    .LINE 46
                           A   497    
0401A5 DD7EFC              A   498    	LD	A,(IX+%FFFFFFFC)
0401A8 FE02                A   499    	CP	A,%2
0401AA 38 E5               A   500    	JR	C,L_2
                           A   501    ;   47			done = 128;
                           A   502    .LINE 47
                           A   503    
0401AC DD36F780            A   504    	LD	(IX+%FFFFFFF7),%80
                           A   505    ;   48			*((UINT8*)DONE) = done;
                           A   506    .LINE 48
                           A   507    
0401B0 3E80                A   508    	LD	A,%80
0401B2 32000007            A   509    	LD	(458752),A
                           A   510    ;   49			while(done == 128) {
                           A   511    .LINE 49
                           A   512    
0401B6 18 07               A   513    	JR	L_6
0401B8                     A   514    L_7:
                           A   515    ;   50				done = *((volatile UINT8*)D
                           A   516    .LINE 50
                           A   517    
0401B8 3A000007            A   518    	LD	A,(458752)
0401BC DD77F7              A   519    	LD	(IX+%FFFFFFF7),A
                           A   520    ;   51			}
0401BF                     A   521    L_6:
                           A   522    .LINE 51
                           A   523    
0401BF DD7EF7              A   524    	LD	A,(IX+%FFFFFFF7)
0401C2 FE80                A   525    	CP	A,%80
0401C4 28 F2               A   526    	JR	Z,L_7
                           A   527    ;   52			head += 0x10;
                           A   528    .LINE 52
                           A   529    
0401C6 DD7EFB              A   530    	LD	A,(IX+%FFFFFFFB)
0401C9 C610                A   531    	ADD	A,%10
0401CB DD77FB              A   532    	LD	(IX+%FFFFFFFB),A
0401CE 18 B4               A   533    	JR	L_10
                           A   534    ;   53		}
                           A   535    ;   54		while(1);
0401D0                     A   536    L_12:
                           A   537    .LINE 54
                           A   538    
0401D0 18 FE               A   539    	JR	L_12
                           A   540    ;   55		
                           A   541    ;   56		
                           A   542    ;   57		
                           A   543    ;   58		
                           A   544    ;   59		
                           A   545    ;   60		
                           A   546    ;   61		waitZDI(1,0);
                           A   547    ;   62		
                           A   548    ;   63		init_spi();
                           A   549    ;   64		f_mount(&fs, "", 1);
                           A   550    ;   65	
                           A   551    ;   66		addressto = FLASHSTART;
                           A   552    ;   67		addressfrom = LOADADDRESS;
                           A   553    ;   68	
                           A   554    ;   69		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   555    ;   70		if(fr == FR_OK) {
                           A   556    ;   71	
                           A   557    ;   72			di();
                           A   558    ;   73			size = f_size(&fil);
                           A   559    ;   74			waitZDI(1, size);
                           A   560    ;   75	
                           A   561    ;   76			fr = f_read(&fil, (void *)LOADA
                           A   562    ;   77	
                           A   563    ;   78			f_close(&fil);
                           A   564    ;   79			waitZDI(1, br);
                           A   565    ;   80			
                           A   566    ;   81			// Wait for user to acknowledge
                           A   567    ;   82			waitZDI(1, 0);
                           A   568    ;   83			
                           A   569    ;   84			// Unprotect and erase flash
                           A   570    ;   85			enableFlashKeyRegister();	// 
                           A   571    ;   86			FLASH_PROT = 0;				// 
                           A   572    ;   87			enableFlashKeyRegister();	// 
                           A   573    ;   88			FLASH_FDIV = 0x5F;			// 
                           A   574    ;   89	
                           A   575    ;   90			// Erase all flash pages
                           A   576    ;   91			for(counter = 0; counter < FLAS
0401D2                     A   577    L_18:
                           A   578    .LINE 91
                           A   579    
                           A   580    ;   92			{
                           A   581    ;   93				FLASH_PAGE = counter;
                           A   582    .LINE 93
                           A   583    
0401D2 DD7EFD              A   584    	LD	A,(IX+%FFFFFFFD)
0401D5 ED39FC              A   585    	OUT0	(252),A
                           A   586    ;   94				FLASH_PGCTL = 0x02;			
                           A   587    .LINE 94
                           A   588    
0401D8 3E02                A   589    	LD	A,%2
0401DA ED39FF              A   590    	OUT0	(255),A
                           A   591    ;   95	
                           A   592    ;   96				do
0401DD                     A   593    L_16:
                           A   594    .LINE 96
                           A   595    
                           A   596    ;   97				{
                           A   597    ;   98					value = FLASH_PGCTL;
                           A   598    .LINE 98
                           A   599    
0401DD ED38FF              A   600    	IN0	A,(255)
0401E0 DD77FC              A   601    	LD	(IX+%FFFFFFFC),A
                           A   602    ;   99				}
                           A   603    ;  100				while(value & 0x02);// wait
                           A   604    .LINE 100
                           A   605    
0401E3 E602                A   606    	AND	A,%2
0401E5 20 F6               A   607    	JR	NZ,L_16
0401E7 DD07FD              A   608    	LD	BC,(IX+%FFFFFFFD)
0401EA 03                  A   609    	INC	BC
0401EB DD0FFD              A   610    	LD	(IX+%FFFFFFFD),BC
0401EE 01800000            A   611    	LD	BC,128
0401F2 DD27FD              A   612    	LD	HL,(IX+%FFFFFFFD)
0401F5 B7                  A   613    	OR	A,A
0401F6 ED42                A   614    	SBC	HL,BC
0401F8 38 D8               A   615    	JR	C,L_18
                           A   616    ;  101			}
                           A   617    ;  102			
                           A   618    ;  103			// determine number of pages to
                           A   619    ;  104			pagemax = size/PAGESIZE;
                           A   620    ;  105			if(size%PAGESIZE) // last page 
                           A   621    .LINE 105
                           A   622    
0401FA 01FF0300            A   623    	LD	BC,1023
0401FE DD27E8              A   624    	LD	HL,(IX+%FFFFFFE8)
040201 CD 50 43 04         A   625    	CALL	__iand
040205 DD2FEB              A   626    	LD	(IX+%FFFFFFEB),HL
040208 CD 41 42 04         A   627    	CALL	__icmpzero
                           A   628    ;  106			{
                           A   629    ;  107				pagemax += 1;
                           A   630    ;  108				lastpagebytes = size%PAGESI
                           A   631    ;  109			}
                           A   632    ;  110			else lastpagebytes = PAGESIZE; 
                           A   633    .LINE 110
                           A   634    
                           A   635    ;  111	
                           A   636    ;  112			waitZDI(1, pagemax);
                           A   637    .LINE 112
                           A   638    
04020C DD07EE              A   639    	LD	BC,(IX+%FFFFFFEE)
04020F C5                  A   640    	PUSH	BC
040210 01010000            A   641    	LD	BC,1
040214 C5                  A   642    	PUSH	BC
040215 CD 45 01 04         A   643    	CALL	_waitZDI
040219 C1                  A   644    	POP	BC
04021A C1                  A   645    	POP	BC
                           A   646    ;  113	
                           A   647    ;  114			// write out each page to flash
                           A   648    ;  115			for(counter = 0; counter < page
                           A   649    .LINE 115
                           A   650    
04021B 01000000            A   651    	LD	BC,0
04021F DD0FFD              A   652    	LD	(IX+%FFFFFFFD),BC
040222 18 50               A   653    	JR	L_31
040224                     A   654    L_29:
                           A   655    ;  116			{
                           A   656    ;  117				if(counter == (pagemax - 1)
                           A   657    .LINE 117
                           A   658    
040224 DD31EE              A   659    	LD	IY,(IX+%FFFFFFEE)
040227 ED23FF              A   660    	LEA	HL,IY+%FFFFFFFF
04022A DD07FD              A   661    	LD	BC,(IX+%FFFFFFFD)
04022D B7                  A   662    	OR	A,A
04022E ED42                A   663    	SBC	HL,BC
040230 20 15               A   664    	JR	NZ,L_27
                           A   665    ;  118					fastmemcpy(addressto,ad
                           A   666    .LINE 118
                           A   667    
040232 DD07E5              A   668    	LD	BC,(IX+%FFFFFFE5)
040235 C5                  A   669    	PUSH	BC
040236 DD07F1              A   670    	LD	BC,(IX+%FFFFFFF1)
040239 C5                  A   671    	PUSH	BC
04023A DD07F4              A   672    	LD	BC,(IX+%FFFFFFF4)
04023D C5                  A   673    	PUSH	BC
04023E CD 26 01 04         A   674    	CALL	_fastmemcpy
040242 C1                  A   675    	POP	BC
040243 C1                  A   676    	POP	BC
040244 C1                  A   677    	POP	BC
                           A   678    ;  119				else 
                           A   679    .LINE 119
                           A   680    
040245 18 14               A   681    	JR	L_28
040247                     A   682    L_27:
                           A   683    ;  120					fastmemcpy(addressto,ad
                           A   684    .LINE 120
                           A   685    
040247 01000400            A   686    	LD	BC,1024
04024B C5                  A   687    	PUSH	BC
04024C DD07F1              A   688    	LD	BC,(IX+%FFFFFFF1)
04024F C5                  A   689    	PUSH	BC
040250 DD07F4              A   690    	LD	BC,(IX+%FFFFFFF4)
040253 C5                  A   691    	PUSH	BC
040254 CD 26 01 04         A   692    	CALL	_fastmemcpy
040258 C1                  A   693    	POP	BC
040259 C1                  A   694    	POP	BC
04025A C1                  A   695    	POP	BC
04025B                     A   696    L_28:
                           A   697    ;  121			
                           A   698    ;  122				addressto += PAGESIZE;
                           A   699    .LINE 122
                           A   700    
04025B 01000400            A   701    	LD	BC,1024
04025F DD27F4              A   702    	LD	HL,(IX+%FFFFFFF4)
040262 09                  A   703    	ADD	HL,BC
040263 DD2FF4              A   704    	LD	(IX+%FFFFFFF4),HL
                           A   705    ;  123				addressfrom += PAGESIZE;
                           A   706    .LINE 123
                           A   707    
040266 DD27F1              A   708    	LD	HL,(IX+%FFFFFFF1)
040269 09                  A   709    	ADD	HL,BC
04026A DD2FF1              A   710    	LD	(IX+%FFFFFFF1),HL
04026D DD07FD              A   711    	LD	BC,(IX+%FFFFFFFD)
040270 03                  A   712    	INC	BC
040271 DD0FFD              A   713    	LD	(IX+%FFFFFFFD),BC
                           A   714    ;  124				//timer = 0;
                           A   715    ;  125				//while(timer++ < 32768);
                           A   716    ;  126				//waitZDI(FEEDBACK_PAGEWRIT
                           A   717    ;  127			}
040274                     A   718    L_31:
                           A   719    .LINE 127
                           A   720    
040274 DD07EE              A   721    	LD	BC,(IX+%FFFFFFEE)
040277 DD27FD              A   722    	LD	HL,(IX+%FFFFFFFD)
04027A B7                  A   723    	OR	A,A
04027B ED42                A   724    	SBC	HL,BC
04027D 38 A5               A   725    	JR	C,L_29
                           A   726    ;  128			lockFlashKeyRegister();	// lock
                           A   727    .LINE 128
                           A   728    
04027F CD 11 01 04         A   729    	CALL	_lockFlashKeyRegister
                           A   730    ;  129			waitZDI(1, counter);
                           A   731    .LINE 129
                           A   732    
040283 DD07FD              A   733    	LD	BC,(IX+%FFFFFFFD)
040286 C5                  A   734    	PUSH	BC
040287 01010000            A   735    	LD	BC,1
04028B C5                  A   736    	PUSH	BC
04028C CD 45 01 04         A   737    	CALL	_waitZDI
040290 C1                  A   738    	POP	BC
040291 C1                  A   739    	POP	BC
                           A   740    ;  130		}
                           A   741    ;  131		else waitZDI(0, 0);
                           A   742    .LINE 131
                           A   743    
                           A   744    ;  132		while(1);
040292                     A   745    L_36:
                           A   746    .LINE 132
                           A   747    
040292 18 FE               A   748    	JR	L_36
                           A   749    ;  133		return 0;
                           A   750    ;  134	}
                           A   751    .LINE 134
                           A   752    
040294 DDF9                A   753    	LD	SP,IX
040296 DDE1                A   754    	POP	IX
040298 C9                  A   755    	RET	
                           A   756    
                           A   757    
                           A   758    ;**************************** _main ***********
                           A   759    ;Name                         Addr/Register   S
                           A   760    ;_lockFlashKeyRegister               IMPORT  --
                           A   761    ;_fastmemcpy                         IMPORT  --
                           A   762    ;_waitZDI                            IMPORT  --
                           A   763    ;lastpagebytes                        IX-27    
                           A   764    ;size                                 IX-24    
                           A   765    ;G_0                                  IX-21    
                           A   766    ;pagemax                              IX-18    
                           A   767    ;addressfrom                          IX-15    
                           A   768    ;addressto                            IX-12    
                           A   769    ;done                                  IX-9    
                           A   770    ;ptr                                   IX-8    
                           A   771    ;head                                  IX-5    
                           A   772    ;value                                 IX-4    
                           A   773    ;counter                               IX-3    
                           A   774    ;argv                                  IX+9    
                           A   775    ;argc                                  IX+6    
                           A   776    
                           A   777    
                           A   778    ; Stack Frame Size: 39 (bytes)
                           A   779    ;       Spill Code: 0 (instruction)
                           A   780    
                           A   781    
                           A   782    .ENDFUNC "main",134,"_main"
                           A   783    	XREF _fastmemcpy:ROM
                           A   784    	XREF _lockFlashKeyRegister:ROM
                           A   785    	XREF _waitZDI:ROM
                           A   786    	XREF __iand:ROM
                           A   787    	XREF __icmpzero:ROM
                           A   788    	XDEF _main
                           A   789    	XDEF _fs
                           A   790    	END


Errors: 0
Warnings: 0
Lines Assembled: 791
