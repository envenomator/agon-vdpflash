Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED21-Oct-23     17:27:22     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",558
                           A     9    .DEFINE "fs_type"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "pdrv"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "n_fats"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "wflag"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "fsi_flag"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "id"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 13
                           A    38    .ENDEF
                           A    39    .DEFINE "n_rootdir"
                           A    40    .VALUE 7
                           A    41    .CLASS 8
                           A    42    .TYPE 13
                           A    43    .ENDEF
                           A    44    .DEFINE "csize"
                           A    45    .VALUE 9
                           A    46    .CLASS 8
                           A    47    .TYPE 13
                           A    48    .ENDEF
                           A    49    .DEFINE "lfnbuf"
                           A    50    .VALUE 11
                           A    51    .CLASS 8
                           A    52    .TYPE 45
                           A    53    .ENDEF
                           A    54    .DEFINE "cdir"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 15
                           A    58    .ENDEF
                           A    59    .DEFINE "n_fatent"
                           A    60    .VALUE 18
                           A    61    .CLASS 8
                           A    62    .TYPE 15
                           A    63    .ENDEF
                           A    64    .DEFINE "fsize"
                           A    65    .VALUE 22
                           A    66    .CLASS 8
                           A    67    .TYPE 15
                           A    68    .ENDEF
                           A    69    .DEFINE "volbase"
                           A    70    .VALUE 26
                           A    71    .CLASS 8
                           A    72    .TYPE 15
                           A    73    .ENDEF
                           A    74    .DEFINE "fatbase"
                           A    75    .VALUE 30
                           A    76    .CLASS 8
                           A    77    .TYPE 15
                           A    78    .ENDEF
                           A    79    .DEFINE "dirbase"
                           A    80    .VALUE 34
                           A    81    .CLASS 8
                           A    82    .TYPE 15
                           A    83    .ENDEF
                           A    84    .DEFINE "database"
                           A    85    .VALUE 38
                           A    86    .CLASS 8
                           A    87    .TYPE 15
                           A    88    .ENDEF
                           A    89    .DEFINE "winsect"
                           A    90    .VALUE 42
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "win"
                           A    95    .VALUE 46
                           A    96    .CLASS 8
                           A    97    .DIM 512
                           A    98    .TYPE 108
                           A    99    .ENDEF
                           A   100    .ENDREC "NONAME0"
                           A   101    .BEGREC "NONAME1",15
                           A   102    .DEFINE "fs"
                           A   103    .VALUE 0
                           A   104    .CLASS 8
                           A   105    .TAG "NONAME0"
                           A   106    .TYPE 40
                           A   107    .ENDEF
                           A   108    .DEFINE "id"
                           A   109    .VALUE 3
                           A   110    .CLASS 8
                           A   111    .TYPE 13
                           A   112    .ENDEF
                           A   113    .DEFINE "attr"
                           A   114    .VALUE 5
                           A   115    .CLASS 8
                           A   116    .TYPE 12
                           A   117    .ENDEF
                           A   118    .DEFINE "stat"
                           A   119    .VALUE 6
                           A   120    .CLASS 8
                           A   121    .TYPE 12
                           A   122    .ENDEF
                           A   123    .DEFINE "sclust"
                           A   124    .VALUE 7
                           A   125    .CLASS 8
                           A   126    .TYPE 15
                           A   127    .ENDEF
                           A   128    .DEFINE "objsize"
                           A   129    .VALUE 11
                           A   130    .CLASS 8
                           A   131    .TYPE 15
                           A   132    .ENDEF
                           A   133    .ENDREC "NONAME1"
                           A   134    .BEGREC "NONAME2",29
                           A   135    .DEFINE "obj"
                           A   136    .VALUE 0
                           A   137    .CLASS 8
                           A   138    .TAG "NONAME1"
                           A   139    .TYPE 8
                           A   140    .ENDEF
                           A   141    .DEFINE "flag"
                           A   142    .VALUE 15
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "err"
                           A   147    .VALUE 16
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "fptr"
                           A   152    .VALUE 17
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .DEFINE "clust"
                           A   157    .VALUE 21
                           A   158    .CLASS 8
                           A   159    .TYPE 15
                           A   160    .ENDEF
                           A   161    .DEFINE "sect"
                           A   162    .VALUE 25
                           A   163    .CLASS 8
                           A   164    .TYPE 15
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME2"
                           A   167    .BEGREC "NONAME3",46
                           A   168    .DEFINE "obj"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TAG "NONAME1"
                           A   172    .TYPE 8
                           A   173    .ENDEF
                           A   174    .DEFINE "dptr"
                           A   175    .VALUE 15
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 19
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 23
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir"
                           A   190    .VALUE 27
                           A   191    .CLASS 8
                           A   192    .TYPE 44
                           A   193    .ENDEF
                           A   194    .DEFINE "fn"
                           A   195    .VALUE 30
                           A   196    .CLASS 8
                           A   197    .DIM 12
                           A   198    .TYPE 108
                           A   199    .ENDEF
                           A   200    .DEFINE "blk_ofs"
                           A   201    .VALUE 42
                           A   202    .CLASS 8
                           A   203    .TYPE 15
                           A   204    .ENDEF
                           A   205    .ENDREC "NONAME3"
                           A   206    .BEGREC "NONAME4",278
                           A   207    .DEFINE "fsize"
                           A   208    .VALUE 0
                           A   209    .CLASS 8
                           A   210    .TYPE 15
                           A   211    .ENDEF
                           A   212    .DEFINE "fdate"
                           A   213    .VALUE 4
                           A   214    .CLASS 8
                           A   215    .TYPE 13
                           A   216    .ENDEF
                           A   217    .DEFINE "ftime"
                           A   218    .VALUE 6
                           A   219    .CLASS 8
                           A   220    .TYPE 13
                           A   221    .ENDEF
                           A   222    .DEFINE "fattrib"
                           A   223    .VALUE 8
                           A   224    .CLASS 8
                           A   225    .TYPE 12
                           A   226    .ENDEF
                           A   227    .DEFINE "altname"
                           A   228    .VALUE 9
                           A   229    .CLASS 8
                           A   230    .DIM 13
                           A   231    .TYPE 98
                           A   232    .ENDEF
                           A   233    .DEFINE "fname"
                           A   234    .VALUE 22
                           A   235    .CLASS 8
                           A   236    .DIM 256
                           A   237    .TYPE 98
                           A   238    .ENDEF
                           A   239    .ENDREC "NONAME4"
                           A   240    .BEGREC "NONAME5",12
                           A   241    .DEFINE "fmt"
                           A   242    .VALUE 0
                           A   243    .CLASS 8
                           A   244    .TYPE 12
                           A   245    .ENDEF
                           A   246    .DEFINE "n_fat"
                           A   247    .VALUE 1
                           A   248    .CLASS 8
                           A   249    .TYPE 12
                           A   250    .ENDEF
                           A   251    .DEFINE "align"
                           A   252    .VALUE 2
                           A   253    .CLASS 8
                           A   254    .TYPE 14
                           A   255    .ENDEF
                           A   256    .DEFINE "n_root"
                           A   257    .VALUE 5
                           A   258    .CLASS 8
                           A   259    .TYPE 14
                           A   260    .ENDEF
                           A   261    .DEFINE "au_size"
                           A   262    .VALUE 8
                           A   263    .CLASS 8
                           A   264    .TYPE 15
                           A   265    .ENDEF
                           A   266    .ENDREC "NONAME5"
                           A   267    	SEGMENT BSS
044690                     A   268    _fs:
044690                     A   269    	DS	558
                           A   270    .DEFINE "fs"
                           A   271    .ALIAS "_fs"
                           A   272    .CLASS 83
                           A   273    .VALUE _fs
                           A   274    .TAG "NONAME0"
                           A   275    .TYPE 8
                           A   276    .ENDEF
                           A   277    ;    1	#include <ez80.h>
                           A   278    ;    2	#include "src_fatfs\ff.h"
                           A   279    ;    3	#include "spi.h"
                           A   280    ;    4	#include "defines.h"
                           A   281    ;    5	#include <stdint.h>
                           A   282    ;    6	#include "agontimer.h"
                           A   283    ;    7	#include "protocol.h"
                           A   284    ;    8	
                           A   285    ;    9	#define PAGESIZE	1024
                           A   286    ;   10	#define FLASHPAGES	128
                           A   287    ;   11	#define FLASHSTART	0x0
                           A   288    ;   12	#define BAUDRATE	500000
                           A   289    ;   13	
                           A   290    ;   14	#define MOSFILENAME	"MOS.bin"
                           A   291    ;   15	#define LOADADDRESS	0x50000
                           A   292    ;   16	
                           A   293    ;   17	extern void init_UART0(void);
                           A   294    ;   18	
                           A   295    ;   19	extern void enableFlashKeyRegister(void
                           A   296    ;   20	extern void lockFlashKeyRegister(void);
                           A   297    ;   21	extern void fastmemcpy(UINT24 destinati
                           A   298    ;   22	extern void reset(void);
                           A   299    ;   23	
                           A   300    ;   24	FATFS 	fs;
                           A   301    	SEGMENT CODE
                           A   302    ;   25	
                           A   303    ;   26	int main(int argc, char * argv[]) {
040145                     A   304    _main:
                           A   305    .DEFINE "_main"
                           A   306    
                           A   307    .VALUE _main
                           A   308    
                           A   309    .CLASS 2
                           A   310    
                           A   311    .TYPE 68
                           A   312    
                           A   313    .ENDEF
                           A   314    
                           A   315    .BEGFUNC "main",26,"_main"
                           A   316    
                           A   317    .LINE 26
                           A   318    
                           A   319    .DEFINE "argc"
                           A   320    
                           A   321    .CLASS 65
                           A   322    
                           A   323    .VALUE 6
                           A   324    
                           A   325    .TYPE 4
                           A   326    
                           A   327    .ENDEF
                           A   328    
                           A   329    .DEFINE "argv"
                           A   330    
                           A   331    .CLASS 65
                           A   332    
                           A   333    .VALUE 9
                           A   334    
                           A   335    .TYPE 290
                           A   336    
                           A   337    .ENDEF
                           A   338    
                           A   339    .DEFINE "counter"
                           A   340    
                           A   341    .CLASS 65
                           A   342    
                           A   343    .VALUE -3
                           A   344    
                           A   345    .TYPE 14
                           A   346    
                           A   347    .ENDEF
                           A   348    
                           A   349    .DEFINE "addressto"
                           A   350    
                           A   351    .CLASS 65
                           A   352    
                           A   353    .VALUE -6
                           A   354    
                           A   355    .TYPE 14
                           A   356    
                           A   357    .ENDEF
                           A   358    
                           A   359    .DEFINE "addressfrom"
                           A   360    
                           A   361    .CLASS 65
                           A   362    
                           A   363    .VALUE -9
                           A   364    
                           A   365    .TYPE 14
                           A   366    
                           A   367    .ENDEF
                           A   368    
                           A   369    .DEFINE "value"
                           A   370    
                           A   371    .CLASS 65
                           A   372    
                           A   373    .VALUE -10
                           A   374    
                           A   375    .TYPE 12
                           A   376    
                           A   377    .ENDEF
                           A   378    
                           A   379    .DEFINE "pagemax"
                           A   380    
                           A   381    .CLASS 65
                           A   382    
                           A   383    .VALUE -13
                           A   384    
                           A   385    .TYPE 14
                           A   386    
                           A   387    .ENDEF
                           A   388    
                           A   389    .DEFINE "size"
                           A   390    
                           A   391    .CLASS 65
                           A   392    
                           A   393    .VALUE -19
                           A   394    
                           A   395    .TYPE 14
                           A   396    
                           A   397    .ENDEF
                           A   398    
                           A   399    .DEFINE "lastpagebytes"
                           A   400    
                           A   401    .CLASS 65
                           A   402    
                           A   403    .VALUE -22
                           A   404    
                           A   405    .TYPE 14
                           A   406    
                           A   407    .ENDEF
                           A   408    
040145 DDE5                A   409    	PUSH	IX
040147 DD210000 00         A   410    	LD	IX,0
04014C DD39                A   411    	ADD	IX,SP
04014E ED22EA              A   412    	LEA	HL,IX+%FFFFFFEA
040151 F9                  A   413    	LD	SP,HL
                           A   414    ;   27		FRESULT	fr;
                           A   415    ;   28		FIL	   	fil;
                           A   416    ;   29		UINT24  br;	
                           A   417    ;   30		void * 	dest;
                           A   418    ;   31		UINT24 size;
                           A   419    ;   32		
                           A   420    ;   33		UINT24	counter,pagemax, lastpageby
                           A   421    ;   34		UINT24 addressto,addressfrom;
                           A   422    ;   35		UINT8	value;
                           A   423    ;   36		UINT24 timer;
                           A   424    ;   37		init_spi();
                           A   425    .LINE 37
                           A   426    
040152 CD D1 3D 04         A   427    	CALL	_init_spi
                           A   428    ;   38		init_UART0();
                           A   429    .LINE 38
                           A   430    
040156 CD 8F 3F 04         A   431    	CALL	_init_UART0
                           A   432    ;   39	
                           A   433    ;   40		/*
                           A   434    ;   41		while(1) {
                           A   435    ;   42			putch('A');
                           A   436    ;   43			delayms(500);
                           A   437    ;   44			putch('X');
                           A   438    ;   45			delayms(500);
                           A   439    ;   46		}
                           A   440    ;   47		*/
                           A   441    ;   48		while(1) {
04015A                     A   442    L_1:
                           A   443    .LINE 48
                           A   444    
                           A   445    ;   49			sendStatus('S', 1, 0xAABBCCDD);
                           A   446    .LINE 49
                           A   447    
04015A 01AA0000            A   448    	LD	BC,170
04015E C5                  A   449    	PUSH	BC
04015F 01DDCCBB            A   450    	LD	BC,12307677
040163 C5                  A   451    	PUSH	BC
040164 01010000            A   452    	LD	BC,1
040168 C5                  A   453    	PUSH	BC
040169 01530000            A   454    	LD	BC,83
04016D C5                  A   455    	PUSH	BC
04016E CD 79 40 04         A   456    	CALL	_sendStatus
040172 C1                  A   457    	POP	BC
040173 C1                  A   458    	POP	BC
040174 C1                  A   459    	POP	BC
040175 C1                  A   460    	POP	BC
                           A   461    ;   50			getch();
                           A   462    .LINE 50
                           A   463    
040176 CD 74 41 04         A   464    	CALL	_getch
                           A   465    ;   51			//delayms(500);
                           A   466    ;   52			sendStatus('E', 1, 0);
                           A   467    .LINE 52
                           A   468    
04017A 01000000            A   469    	LD	BC,0
04017E C5                  A   470    	PUSH	BC
04017F C5                  A   471    	PUSH	BC
040180 01010000            A   472    	LD	BC,1
040184 C5                  A   473    	PUSH	BC
040185 01450000            A   474    	LD	BC,69
040189 C5                  A   475    	PUSH	BC
04018A CD 79 40 04         A   476    	CALL	_sendStatus
04018E C1                  A   477    	POP	BC
04018F C1                  A   478    	POP	BC
040190 C1                  A   479    	POP	BC
040191 C1                  A   480    	POP	BC
                           A   481    ;   53			getch();
                           A   482    .LINE 53
                           A   483    
040192 CD 74 41 04         A   484    	CALL	_getch
040196 18 C2               A   485    	JR	L_1
                           A   486    ;   54			//delayms(500);
                           A   487    ;   55		}
                           A   488    ;   56	
                           A   489    ;   57		f_mount(&fs, "", 1);
                           A   490    ;   58	
                           A   491    ;   59		addressto = FLASHSTART;
                           A   492    ;   60		addressfrom = LOADADDRESS;
                           A   493    ;   61	
                           A   494    ;   62		fr = f_open(&fil, MOSFILENAME, FA_R
                           A   495    ;   63		if(fr == FR_OK) {
                           A   496    ;   64	
                           A   497    ;   65			di();
                           A   498    ;   66			size = f_size(&fil);
                           A   499    ;   67			//waitZDI(FEEDBACK_OPEN, size);
                           A   500    ;   68	
                           A   501    ;   69			fr = f_read(&fil, (void *)LOADA
                           A   502    ;   70	
                           A   503    ;   71			f_close(&fil);
                           A   504    ;   72			//waitZDI(FEEDBACK_FILEDONE, br
                           A   505    ;   73			
                           A   506    ;   74			// Wait for user to acknowledge
                           A   507    ;   75			//waitZDI(FEEDBACK_PROCEED, 0);
                           A   508    ;   76			
                           A   509    ;   77			// Unprotect and erase flash
                           A   510    ;   78			enableFlashKeyRegister();	// 
                           A   511    ;   79			FLASH_PROT = 0;				// 
                           A   512    ;   80			enableFlashKeyRegister();	// 
                           A   513    ;   81			FLASH_FDIV = 0x5F;			// 
                           A   514    ;   82	
                           A   515    ;   83			// Erase all flash pages
                           A   516    ;   84			for(counter = 0; counter < FLAS
040198                     A   517    L_6:
                           A   518    .LINE 84
                           A   519    
                           A   520    ;   85			{
                           A   521    ;   86				FLASH_PAGE = counter;
                           A   522    .LINE 86
                           A   523    
040198 DD7EFD              A   524    	LD	A,(IX+%FFFFFFFD)
04019B ED39FC              A   525    	OUT0	(252),A
                           A   526    ;   87				FLASH_PGCTL = 0x02;			
                           A   527    .LINE 87
                           A   528    
04019E 3E02                A   529    	LD	A,%2
0401A0 ED39FF              A   530    	OUT0	(255),A
                           A   531    ;   88	
                           A   532    ;   89				do
0401A3                     A   533    L_4:
                           A   534    .LINE 89
                           A   535    
                           A   536    ;   90				{
                           A   537    ;   91					value = FLASH_PGCTL;
                           A   538    .LINE 91
                           A   539    
0401A3 ED38FF              A   540    	IN0	A,(255)
0401A6 DD77F6              A   541    	LD	(IX+%FFFFFFF6),A
                           A   542    ;   92				}
                           A   543    ;   93				while(value & 0x02);// wait
                           A   544    .LINE 93
                           A   545    
0401A9 E602                A   546    	AND	A,%2
0401AB 20 F6               A   547    	JR	NZ,L_4
0401AD DD07FD              A   548    	LD	BC,(IX+%FFFFFFFD)
0401B0 03                  A   549    	INC	BC
0401B1 DD0FFD              A   550    	LD	(IX+%FFFFFFFD),BC
0401B4 01800000            A   551    	LD	BC,128
0401B8 DD27FD              A   552    	LD	HL,(IX+%FFFFFFFD)
0401BB B7                  A   553    	OR	A,A
0401BC ED42                A   554    	SBC	HL,BC
0401BE 38 D8               A   555    	JR	C,L_6
                           A   556    ;   94			}
                           A   557    ;   95			
                           A   558    ;   96			// determine number of pages to
                           A   559    ;   97			pagemax = size/PAGESIZE;
                           A   560    ;   98			if(size%PAGESIZE) // last page 
                           A   561    .LINE 98
                           A   562    
0401C0 01FF0300            A   563    	LD	BC,1023
0401C4 DD27ED              A   564    	LD	HL,(IX+%FFFFFFED)
0401C7 CD 38 45 04         A   565    	CALL	__iand
0401CB DD2FF0              A   566    	LD	(IX+%FFFFFFF0),HL
0401CE CD 29 44 04         A   567    	CALL	__icmpzero
                           A   568    ;   99			{
                           A   569    ;  100				pagemax += 1;
                           A   570    ;  101				lastpagebytes = size%PAGESI
                           A   571    ;  102			}
                           A   572    ;  103			else lastpagebytes = PAGESIZE; 
                           A   573    .LINE 103
                           A   574    
                           A   575    ;  104	
                           A   576    ;  105			//waitZDI(FEEDBACK_ERASEDONE, p
                           A   577    ;  106	
                           A   578    ;  107			// write out each page to flash
                           A   579    ;  108			for(counter = 0; counter < page
                           A   580    .LINE 108
                           A   581    
0401D2 01000000            A   582    	LD	BC,0
0401D6 DD0FFD              A   583    	LD	(IX+%FFFFFFFD),BC
0401D9 18 50               A   584    	JR	L_18
0401DB                     A   585    L_16:
                           A   586    ;  109			{
                           A   587    ;  110				if(counter == (pagemax - 1)
                           A   588    .LINE 110
                           A   589    
0401DB DD31F3              A   590    	LD	IY,(IX+%FFFFFFF3)
0401DE ED23FF              A   591    	LEA	HL,IY+%FFFFFFFF
0401E1 DD07FD              A   592    	LD	BC,(IX+%FFFFFFFD)
0401E4 B7                  A   593    	OR	A,A
0401E5 ED42                A   594    	SBC	HL,BC
0401E7 20 15               A   595    	JR	NZ,L_14
                           A   596    ;  111					fastmemcpy(addressto,ad
                           A   597    .LINE 111
                           A   598    
0401E9 DD07EA              A   599    	LD	BC,(IX+%FFFFFFEA)
0401EC C5                  A   600    	PUSH	BC
0401ED DD07F7              A   601    	LD	BC,(IX+%FFFFFFF7)
0401F0 C5                  A   602    	PUSH	BC
0401F1 DD07FA              A   603    	LD	BC,(IX+%FFFFFFFA)
0401F4 C5                  A   604    	PUSH	BC
0401F5 CD 26 01 04         A   605    	CALL	_fastmemcpy
0401F9 C1                  A   606    	POP	BC
0401FA C1                  A   607    	POP	BC
0401FB C1                  A   608    	POP	BC
                           A   609    ;  112				else 
                           A   610    .LINE 112
                           A   611    
0401FC 18 14               A   612    	JR	L_15
0401FE                     A   613    L_14:
                           A   614    ;  113					fastmemcpy(addressto,ad
                           A   615    .LINE 113
                           A   616    
0401FE 01000400            A   617    	LD	BC,1024
040202 C5                  A   618    	PUSH	BC
040203 DD07F7              A   619    	LD	BC,(IX+%FFFFFFF7)
040206 C5                  A   620    	PUSH	BC
040207 DD07FA              A   621    	LD	BC,(IX+%FFFFFFFA)
04020A C5                  A   622    	PUSH	BC
04020B CD 26 01 04         A   623    	CALL	_fastmemcpy
04020F C1                  A   624    	POP	BC
040210 C1                  A   625    	POP	BC
040211 C1                  A   626    	POP	BC
040212                     A   627    L_15:
                           A   628    ;  114			
                           A   629    ;  115				addressto += PAGESIZE;
                           A   630    .LINE 115
                           A   631    
040212 01000400            A   632    	LD	BC,1024
040216 DD27FA              A   633    	LD	HL,(IX+%FFFFFFFA)
040219 09                  A   634    	ADD	HL,BC
04021A DD2FFA              A   635    	LD	(IX+%FFFFFFFA),HL
                           A   636    ;  116				addressfrom += PAGESIZE;
                           A   637    .LINE 116
                           A   638    
04021D DD27F7              A   639    	LD	HL,(IX+%FFFFFFF7)
040220 09                  A   640    	ADD	HL,BC
040221 DD2FF7              A   641    	LD	(IX+%FFFFFFF7),HL
040224 DD07FD              A   642    	LD	BC,(IX+%FFFFFFFD)
040227 03                  A   643    	INC	BC
040228 DD0FFD              A   644    	LD	(IX+%FFFFFFFD),BC
                           A   645    ;  117				//timer = 0;
                           A   646    ;  118				//while(timer++ < 32768);
                           A   647    ;  119				////waitZDI(FEEDBACK_PAGEWR
                           A   648    ;  120			}
04022B                     A   649    L_18:
                           A   650    .LINE 120
                           A   651    
04022B DD07F3              A   652    	LD	BC,(IX+%FFFFFFF3)
04022E DD27FD              A   653    	LD	HL,(IX+%FFFFFFFD)
040231 B7                  A   654    	OR	A,A
040232 ED42                A   655    	SBC	HL,BC
040234 38 A5               A   656    	JR	C,L_16
                           A   657    ;  121			lockFlashKeyRegister();	// lock
                           A   658    .LINE 121
                           A   659    
040236 CD 11 01 04         A   660    	CALL	_lockFlashKeyRegister
                           A   661    ;  122			//waitZDI(FEEDBACK_PAGEWRITTEN,
                           A   662    ;  123		}
                           A   663    ;  124		else //waitZDI(FEEDBACK_OPEN, 0);
                           A   664    .LINE 124
                           A   665    
04023A 18 02               A   666    	JR	L_25
                           A   667    ;  125		while(1);
04023C                     A   668    L_22:
                           A   669    .LINE 125
                           A   670    
04023C 18 FE               A   671    	JR	L_22
04023E                     A   672    L_25:
                           A   673    ;  126		return 0;
                           A   674    .LINE 126
                           A   675    
04023E B7                  A   676    	OR	A,A
04023F ED62                A   677    	SBC	HL,HL
                           A   678    ;  127	}
                           A   679    .LINE 127
                           A   680    
040241 DDF9                A   681    	LD	SP,IX
040243 DDE1                A   682    	POP	IX
040245 C9                  A   683    	RET	
                           A   684    
                           A   685    
                           A   686    ;**************************** _main ***********
                           A   687    ;Name                         Addr/Register   S
                           A   688    ;_lockFlashKeyRegister               IMPORT  --
                           A   689    ;_fastmemcpy                         IMPORT  --
                           A   690    ;_getch                              IMPORT  --
                           A   691    ;_sendStatus                         IMPORT  --
                           A   692    ;_init_UART0                         IMPORT  --
                           A   693    ;_init_spi                           IMPORT  --
                           A   694    ;lastpagebytes                        IX-22    
                           A   695    ;size                                 IX-19    
                           A   696    ;G_0                                  IX-16    
                           A   697    ;pagemax                              IX-13    
                           A   698    ;value                                IX-10    
                           A   699    ;addressfrom                           IX-9    
                           A   700    ;addressto                             IX-6    
                           A   701    ;counter                               IX-3    
                           A   702    ;argv                                  IX+9    
                           A   703    ;argc                                  IX+6    
                           A   704    
                           A   705    
                           A   706    ; Stack Frame Size: 34 (bytes)
                           A   707    ;       Spill Code: 0 (instruction)
                           A   708    
                           A   709    
                           A   710    .ENDFUNC "main",127,"_main"
                           A   711    	XREF _fastmemcpy:ROM
                           A   712    	XREF _lockFlashKeyRegister:ROM
                           A   713    	XREF _init_UART0:ROM
                           A   714    	XREF _getch:ROM
                           A   715    	XREF _sendStatus:ROM
                           A   716    	XREF _init_spi:ROM
                           A   717    	XREF __iand:ROM
                           A   718    	XREF __icmpzero:ROM
                           A   719    	XDEF _main
                           A   720    	XDEF _fs
                           A   721    	END


Errors: 0
Warnings: 0
Lines Assembled: 722
